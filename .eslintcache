<<<<<<< HEAD
[{"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js":"1","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js":"2","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js":"4","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Route.js":"5","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js":"6","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts":"7","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js":"8","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js":"9","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js":"10","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx":"11","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx":"12","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts":"13","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js":"14","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx":"15","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx":"16","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx":"17","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js":"18","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js":"19","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx":"20","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx":"21","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx":"22","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"23","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx":"24","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"25","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"26","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-edit\\TestEdit.jsx":"27"},{"size":812,"mtime":1611225439397,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1002,"mtime":1611593257247,"results":"31","hashOfConfig":"29"},{"size":400,"mtime":1611654262336,"results":"32","hashOfConfig":"29"},{"size":128,"mtime":1611695408517,"results":"33","hashOfConfig":"29"},{"size":6051,"mtime":1611695352171,"results":"34","hashOfConfig":"29"},{"size":571,"mtime":1611699567827,"results":"35","hashOfConfig":"29"},{"size":493,"mtime":1611700574188,"results":"36","hashOfConfig":"29"},{"size":155,"mtime":1611654613954,"results":"37","hashOfConfig":"29"},{"size":180,"mtime":1611654224920,"results":"38","hashOfConfig":"29"},{"size":2305,"mtime":1611703776483,"results":"39","hashOfConfig":"29"},{"size":1194,"mtime":1611565802191,"results":"40","hashOfConfig":"29"},{"size":475,"mtime":1611697773926,"results":"41","hashOfConfig":"29"},{"size":612,"mtime":1611490312094,"results":"42","hashOfConfig":"29"},{"size":3565,"mtime":1611705566589,"results":"43","hashOfConfig":"29"},{"size":1166,"mtime":1611592806392,"results":"44","hashOfConfig":"29"},{"size":763,"mtime":1611592240176,"results":"45","hashOfConfig":"29"},{"size":67,"mtime":1611173601459,"results":"46","hashOfConfig":"29"},{"size":258,"mtime":1611700546151,"results":"47","hashOfConfig":"29"},{"size":1163,"mtime":1611565802195,"results":"48","hashOfConfig":"29"},{"size":8606,"mtime":1611661903937,"results":"49","hashOfConfig":"29"},{"size":424,"mtime":1611173601424,"results":"50","hashOfConfig":"29"},{"size":3368,"mtime":1611661903910,"results":"51","hashOfConfig":"29"},{"size":936,"mtime":1611661903893,"results":"52","hashOfConfig":"29"},{"size":548,"mtime":1611661903908,"results":"53","hashOfConfig":"29"},{"size":547,"mtime":1611661903864,"results":"54","hashOfConfig":"29"},{"size":6488,"mtime":1611703922918,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a0uvo0",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx",["110","111","112"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Route.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js",["113","114"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx",["115","116","117","118"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx",["119"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js",["120"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["121"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-edit\\TestEdit.jsx",["122","123","124","125","126"],{"ruleId":"127","severity":1,"message":"128","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":24},{"ruleId":"127","severity":1,"message":"131","line":1,"column":25,"nodeType":"129","messageId":"130","endLine":1,"endColumn":34},{"ruleId":"127","severity":1,"message":"132","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":24},{"ruleId":"133","severity":1,"message":"134","line":13,"column":23,"nodeType":"135","messageId":"136","endLine":13,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":76,"column":48,"nodeType":"139","messageId":"140","endLine":76,"endColumn":50},{"ruleId":"127","severity":1,"message":"141","line":10,"column":11,"nodeType":"129","messageId":"130","endLine":10,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":25,"column":37,"nodeType":"139","messageId":"140","endLine":25,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":26,"column":17,"nodeType":"144","messageId":"145","endLine":41,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":45,"column":8,"nodeType":"148","endLine":45,"endColumn":10,"suggestions":"149"},{"ruleId":"127","severity":1,"message":"150","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":22},{"ruleId":"151","severity":1,"message":"152","line":1,"column":1,"nodeType":"153","endLine":3,"endColumn":5},{"ruleId":"127","severity":1,"message":"154","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":16},{"ruleId":"127","severity":1,"message":"155","line":4,"column":27,"nodeType":"129","messageId":"130","endLine":4,"endColumn":47},{"ruleId":"127","severity":1,"message":"156","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":15,"column":23,"nodeType":"135","messageId":"136","endLine":15,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":37,"column":44,"nodeType":"139","messageId":"140","endLine":37,"endColumn":46},{"ruleId":"137","severity":1,"message":"138","line":84,"column":48,"nodeType":"139","messageId":"140","endLine":84,"endColumn":50},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'QuestionsService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'getChoosenTest' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.tests'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'QuestionsTable' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","'clearselectQuestions' is defined but never used.","'TestsService' is defined but never used.",{"desc":"158","fix":"159"},"Update the dependencies array to be: [props.tests]",{"range":"160","text":"161"},[1406,1408],"[props.tests]"]
=======
[{"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js":"1","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js":"2","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js":"4","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js":"5","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js":"6","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js":"7","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts":"8","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\testReducer.js":"9","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js":"10","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx":"11","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\tests-list-componenet\\TestList.jsx":"12","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js":"13","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts":"14","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx":"15","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx":"16","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx":"17","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js":"18","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js":"19","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx":"20","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx":"21","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"22","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx":"23","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx":"24","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"25","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"26"},{"size":835,"mtime":1611509840071,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1610977084607,"results":"29","hashOfConfig":"28"},{"size":988,"mtime":1611689919711,"results":"30","hashOfConfig":"28"},{"size":400,"mtime":1611663591460,"results":"31","hashOfConfig":"28"},{"size":162,"mtime":1611690476502,"results":"32","hashOfConfig":"28"},{"size":6043,"mtime":1611680232466,"results":"33","hashOfConfig":"28"},{"size":384,"mtime":1611509840075,"results":"34","hashOfConfig":"28"},{"size":452,"mtime":1611509840077,"results":"35","hashOfConfig":"28"},{"size":155,"mtime":1611663591462,"results":"36","hashOfConfig":"28"},{"size":180,"mtime":1611663591461,"results":"37","hashOfConfig":"28"},{"size":1410,"mtime":1611690809848,"results":"38","hashOfConfig":"28"},{"size":1663,"mtime":1611663591457,"results":"39","hashOfConfig":"28"},{"size":612,"mtime":1610991156295,"results":"40","hashOfConfig":"28"},{"size":358,"mtime":1611663591464,"results":"41","hashOfConfig":"28"},{"size":3062,"mtime":1611675572731,"results":"42","hashOfConfig":"28"},{"size":763,"mtime":1611663591453,"results":"43","hashOfConfig":"28"},{"size":1166,"mtime":1611663591451,"results":"44","hashOfConfig":"28"},{"size":67,"mtime":1610977084591,"results":"45","hashOfConfig":"28"},{"size":129,"mtime":1611509840058,"results":"46","hashOfConfig":"28"},{"size":4281,"mtime":1611681242932,"results":"47","hashOfConfig":"28"},{"size":9199,"mtime":1611665280135,"results":"48","hashOfConfig":"28"},{"size":3368,"mtime":1611583287981,"results":"49","hashOfConfig":"28"},{"size":936,"mtime":1611579148011,"results":"50","hashOfConfig":"28"},{"size":424,"mtime":1611063050703,"results":"51","hashOfConfig":"28"},{"size":548,"mtime":1611584216955,"results":"52","hashOfConfig":"28"},{"size":547,"mtime":1611584216387,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1ge9uil",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js",[],["114","115"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx",["116","117","118"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js",["119","120"],"import React from 'react';\r\nimport './TestForm.css';\r\nimport { connect } from 'react-redux';\r\nimport { selectQuestions } from '../../actions'\r\nimport FormInputs from './FormInputs';\r\nimport TestsSerevice from '../../services/testsService'\r\nimport QuestionBox from '../question-box-component/QuestionBox';\r\nimport Popup from '../popup-component/Popup'\r\n\r\n\r\nfunction ColorRow(e) {\r\n    let TR = e.target;\r\n    while (TR.tagName != \"TR\") {\r\n        TR = TR.parentNode;\r\n    }\r\n    if (TR.classList.contains(\"green\")) {\r\n        TR.classList.remove(\"green\");\r\n        /*console.log(\"disable\")*/\r\n    }\r\n    else {\r\n        TR.classList.add(\"green\");\r\n        /*console.log(\"enable\")*/\r\n    }\r\n}\r\n\r\n\r\nclass TestForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = { dataTable: [], filterTag: \"\", questions: [], showPopup:{show:false, content:null} };\r\n        this.initQuestions();\r\n\r\n    }\r\n\r\n    initQuestions = () => {\r\n        this.props.questions.then(res => {\r\n            this.setState({ questions: res.data });\r\n        })\r\n    }\r\n\r\n    togglePopup=(question)=> {\r\n        this.setState({\r\n            showPopup:{show: !this.state.showPopup.show, content:question}\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ dataTable: this.renderQuestions() });\r\n    }\r\n\r\n    onSubmit = (test) => {\r\n        test = { ...test, questions: this.props.selectedQuestions.map(q => q.Id) };\r\n        alert(\"Test successfully created\");\r\n        TestsSerevice.addTest(test);\r\n        window.location.reload();\r\n    }\r\n    \r\n    checkTags=(tag)=>{\r\n            const filterTags = this.state.filterTag.split(\",\");\r\n            console.log(\"FilterTag:\",filterTags);\r\n            console.log(\"tag:\",tag);\r\n            console.log(\"flag\", filterTags.includes(tag));\r\n            if(filterTags.includes(tag))\r\n                return true;\r\n        return false\r\n    }\r\n\r\n    renderQuestions() {\r\n        let temp = [];\r\n        this.props.questions\r\n            .then(res => {\r\n                res.data.map((question, index) => {\r\n                    if (this.state.filterTag !== \"\") {\r\n                        question.Tags.forEach(t=>{\r\n                        if (this.checkTags(t)) {\r\n                            console.log(\"push\");\r\n                            temp.push(\r\n                                <tr key={question.Id} data-item={question}\r\n                                    onClick={(e) => {\r\n                                        ColorRow(e)\r\n                                        this.props.selectQuestions(question);\r\n                                    }}\r\n                                    className={(this.props.selectedQuestions.find(q => q.Id === question.Id)) ? \"green\" : \"\"}>\r\n                                    <td>{index}</td>\r\n                                    <td>{question.Id}</td>\r\n                                    <td><QuestionBox question={question} /></td>\r\n                                    <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n\r\n                                </tr>)\r\n                            this.setState({ dataTable: temp });\r\n                        }                        })\r\n                    }\r\n                    else {\r\n                        temp.push(<tr key={question.Id} data-item={question}\r\n                            onClick={(e) => {\r\n                                ColorRow(e)\r\n                                this.props.selectQuestions(question);\r\n                            }}\r\n                            className={(this.props.selectedQuestions.find(q => q.Id === question.Id)) ? \"green\" : \"\"}>\r\n                            <td>{index}</td>\r\n                            <td>{question.Id}</td>\r\n                            <td><QuestionBox question={question} /></td>\r\n                            <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n                        </tr>)\r\n                        this.setState({ dataTable: temp });\r\n\r\n                    }\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    updateFiletrState = () => {\r\n        this.setState({ filterTag: window.document.getElementById(\"filterInput\").value });\r\n    }\r\n    FilerQuestions = () => {\r\n        this.setState({ dataTable: this.renderQuestions() });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"TestForm\">\r\n                <FormInputs renderField={this.renderQuestions} onSubmit={this.onSubmit}></FormInputs>\r\n                <div>\r\n                    <input id=\"filterInput\" value={this.state.filterTag} onChange={this.updateFiletrState} />\r\n                    <button onClick={this.FilerQuestions}>Search</button>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"white\">Chose questions</label>\r\n                    <table className=\"ui celled table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>ID</th>\r\n                                <th>Content</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.dataTable}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>{this.state.showPopup.show ?\r\n                    <Popup\r\n                        content = {this.state.showPopup.content}\r\n                        text='Close Me'\r\n                        closePopup={()=>this.togglePopup(null)}\r\n                    />\r\n                    : null\r\n                }</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        questions: state.questions,\r\n        selectedQuestions: state.questionsSelect\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectQuestions })(TestForm);\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts",[],["121","122"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\testReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx",["123","124"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\tests-list-componenet\\TestList.jsx",["125","126","127"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './TestList.css';\r\n\r\nconst TestList = (props) => {\r\n    console.log(props);\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        let tmp = [];\r\n        props.tests.then(res => {\r\n\r\n            res.data.map((t, index) => {\r\n                console.log(t);\r\n                {\r\n                    tmp.push(<tr key={index}>\r\n                        <td>\r\n                            {t.Title}\r\n                        </td>\r\n                        <td></td>\r\n                        <td>\r\n                            {t.questions.length}\r\n                        </td>\r\n                        <td>\r\n                            <div>\r\n                                <button>Edit</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>)\r\n                }\r\n            })\r\n            setData(tmp);\r\n            console.log(tmp);\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"TestList\">\r\n            <table className=\"ui table\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Title</td>\r\n                        <td>Link</td>\r\n                        <td>Questions Sum</td>\r\n                        <td>Actions</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        tests: state.tests\r\n    })\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(TestList)\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx",["128"],"import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass FormInputs extends React.Component {\r\n\r\n\r\n    // onSubmit = (FormValues)=>{\r\n    //     console.log(\"ptops:\",this.props);\r\n    //     console.log(\"FromValues:\",FormValues);\r\n    //     this.props.onSubmit(FormValues);\r\n    // }\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    createInput(formProps) {\r\n\r\n        return (\r\n            <input {...formProps.input} type={formProps.type} />\r\n        )\r\n    }\r\n\r\n    createTextArea(formProps) {\r\n        return <textarea onChange={formProps.input.onChange} value={formProps.input.value} />\r\n    }\r\n    createSelect(formProps) {\r\n        return (<select id=\"Language\" onChange={formProps.input.onChange}>\r\n            <option value=\"\">Language</option>\r\n            <option value=\"0\">Hebrew</option>\r\n            <option value=\"1\">English</option>\r\n        </select>)\r\n    }\r\n\r\n\r\n\r\n    onSubmit=(e)=>{\r\n        this.props.onSubmit(e);\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form id=\"createTestForm\" className=\"ui form\"\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)} method=\"post\">\r\n                <div className=\"field\">\r\n                    <label>Test Title</label>\r\n                    <Field name=\"Title\" component={this.createInput} />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label>Lenguage</label>\r\n                    <Field name=\"Language\" component={this.createSelect} />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Passing grade</label>\r\n                    <Field name=\"PassingGrade\" type=\"number\" component={this.createInput} />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label>Content</label>\r\n                    <Field name=\"Content\" component={this.createTextArea} />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <Field name=\"email\" type=\"email\" component={this.createInput} />\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Success Message</label>\r\n                        <Field name=\"SuccessMes\" type=\"text\" component={this.createInput} />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label>Failure Message</label>\r\n                        <Field name=\"FailureMes\" type=\"text\" component={this.createInput} />\r\n                    </div>\r\n                </div>\r\n                    <div className=\"field\">\r\n                        <label>\"Show answers on submit\"</label>\r\n                        <Field name=\"ShowAnswers\" type=\"checkbox\" component={this.createInput}/>\r\n                    </div>\r\n\r\n\r\n                <input type=\"submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default reduxForm({ form: 'TestCreate' })(FormInputs)\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js",["129"],"export default {\r\n    serverUrl: \"http://localhost:4000\",\r\n  };\r\n  ","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx",["130"],"import React,{ Component } from \"react\";\r\nimport QuestionBox from '../question-box-component/QuestionBox';\r\nimport Popup from '../popup-component/Popup';\r\nimport { connect } from 'react-redux';\r\nimport { selectQuestions } from '../../actions';\r\n\r\n\r\nclass QuestionsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { questions: [], dataTable: [], filterTag: \"\", showPopup:{show:false, content:null} }\r\n        this.initQuestions();\r\n    }\r\n\r\n    initQuestions = () => {\r\n      this.props.questions.then(res => {\r\n          this.setState({ questions: res.data });\r\n      })\r\n  }\r\n\r\n    componentDidMount() {\r\n      this.setState({ dataTable: this.renderQuestions() });\r\n  }\r\n  renderQuestions() {\r\n    let temp = [];\r\n    this.props.questions\r\n        .then(res => {\r\n            res.data.map((question, index) => {\r\n              if (this.state.filterTag !== \"\") {\r\n                question.Tags.forEach(t=>{\r\n                if (this.checkTags(t)) {\r\n                    console.log(\"push\");\r\n                    temp.push(\r\n                        <tr key={question.Id} data-item={question}>\r\n                            <td>{index}</td>\r\n                            <td>{question.Id}</td>\r\n                            <td><QuestionBox question={question} /></td>\r\n                            <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n                        </tr>)\r\n                    this.setState({ dataTable: temp });\r\n                }                        \r\n              })\r\n            }\r\n            else {\r\n                temp.push(<tr key={question.Id} data-item={question}>\r\n                    <td>{index}</td>\r\n                    <td>{question.Id}</td>\r\n                    <td><QuestionBox question={question} /></td>\r\n                    <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n                </tr>)\r\n                this.setState({ dataTable: temp });\r\n            }\r\n          })\r\n        })\r\n      }\r\n\r\n      updateFiletrState = () => {\r\n        this.setState({ filterTag: window.document.getElementById(\"filterInput\").value });\r\n      }\r\n\r\n      FilerQuestions = () => {\r\n          this.setState({ dataTable: this.renderQuestions() });\r\n      }\r\n\r\n      checkTags=(tag)=>{\r\n        const filterTags = this.state.filterTag.split(\",\");\r\n        console.log(\"FilterTag:\",filterTags);\r\n        console.log(\"tag:\",tag);\r\n        console.log(\"flag\", filterTags.includes(tag));\r\n        if(filterTags.includes(tag))\r\n            return true;\r\n        return false\r\n      }\r\n\r\ntogglePopup=(question)=> {\r\n  this.setState({\r\n      showPopup:{show: !this.state.showPopup.show, content:question}\r\n  });\r\n}\r\n    render() { \r\n        return ( \r\n            <div>\r\n              <div>\r\n                    <input id=\"filterInput\" value={this.state.filterTag} onChange={this.updateFiletrState} />\r\n                    <button onClick={this.FilerQuestions}>Search</button>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"white\">All Questions</label>\r\n                    <table className=\"ui celled table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>ID</th>\r\n                                <th>Content</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.dataTable}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>{this.state.showPopup.show ?\r\n                    <Popup\r\n                        content = {this.state.showPopup.content}\r\n                        text='Close Me'\r\n                        closePopup={()=>this.togglePopup(null)}\r\n                    />\r\n                    : null\r\n                }</div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n      questions: state.questions,\r\n      selectedQuestions: state.questionsSelect\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectQuestions })(QuestionsTable);\r\n  ","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["131"],"import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport AnswerInput from './multiAnswerInput';\r\n\r\nclass MultipleChoiceQuestion extends Component {\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state = { Index: 13 }\r\n   }\r\n   \r\n   addAnswerInput = (e) =>{\r\n      if(this.state.Index <= 16){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = false;\r\n         this.props.updateInputsNum(this.state.Index - 8);\r\n         if(this.state.Index < 16){\r\n            this.setState({ Index: this.state.Index + 1 });\r\n         }\r\n         else{\r\n            alert(\"Reached the maximum limit of answers you can add\");\r\n         }\r\n      }     \r\n   }\r\n\r\n   removeAnswerInput = (e) =>{\r\n      if(this.state.Index >= 13){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = true;\r\n         this.props.updateInputsNum(this.state.Index - 9);\r\n         if(this.state.Index > 13){           \r\n            this.setState({ Index: this.state.Index - 1 });\r\n         }\r\n         else{\r\n            alert(\"You can not remove any more answers\");\r\n         }\r\n      }\r\n   }\r\n\r\n   render(){\r\n      return ( \r\n         <div>\r\n            <div>\r\n               <AnswerInput Id=\"1\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"2\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"3\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"4\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"13\" hidden = {true}>\r\n               <AnswerInput Id=\"5\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"14\" hidden = {true}>\r\n               <AnswerInput Id=\"6\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"15\" hidden = {true}>\r\n               <AnswerInput Id=\"7\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"16\" hidden = {true}>\r\n               <AnswerInput Id=\"8\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>          \r\n            <div>\r\n               <button className=\"btn btn-primary btn-sm\">Add Question</button>\r\n            </div>\r\n            <input type=\"button\" value = \"Add Answer\" onClick ={this.addAnswerInput}/>\r\n            <input type=\"button\" value = \"Remove Answer\" onClick ={this.removeAnswerInput}/>\r\n         </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default MultipleChoiceQuestion;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":16,"nodeType":"138","messageId":"139","endLine":1,"endColumn":24},{"ruleId":"136","severity":1,"message":"140","line":1,"column":25,"nodeType":"138","messageId":"139","endLine":1,"endColumn":34},{"ruleId":"136","severity":1,"message":"141","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":24},{"ruleId":"142","severity":1,"message":"143","line":13,"column":23,"nodeType":"144","messageId":"145","endLine":13,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":74,"column":48,"nodeType":"148","messageId":"149","endLine":74,"endColumn":50},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"150","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":22},{"ruleId":"136","severity":1,"message":"151","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":12,"column":37,"nodeType":"148","messageId":"149","endLine":12,"endColumn":39},{"ruleId":"152","severity":1,"message":"153","line":14,"column":17,"nodeType":"154","messageId":"155","endLine":29,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":34,"column":8,"nodeType":"158","endLine":34,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":13,"column":5,"nodeType":"162","messageId":"163","endLine":15,"endColumn":6},{"ruleId":"164","severity":1,"message":"165","line":1,"column":1,"nodeType":"166","endLine":3,"endColumn":5},{"ruleId":"146","severity":1,"message":"147","line":28,"column":44,"nodeType":"148","messageId":"149","endLine":28,"endColumn":46},{"ruleId":"136","severity":1,"message":"167","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":16},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'QuestionsService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'QuestionsTable' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.tests'. Either include it or remove the dependency array.","ArrayExpression",["170"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [props.tests]",{"range":"173","text":"174"},[1017,1019],"[props.tests]"]
>>>>>>> 62eb8bc2caf0d07a126d2dff500a06aaba0abf4d
