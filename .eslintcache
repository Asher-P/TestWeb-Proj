[{"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js":"1","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js":"2","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js":"4","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js":"5","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js":"6","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts":"7","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js":"8","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js":"9","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx":"10","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx":"11","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js":"12","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts":"13","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\data\\questions.data.js":"14","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx":"15","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js":"16","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx":"17","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx":"18","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx":"19","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"20","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js":"21","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"22","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"23"},{"size":835,"mtime":1611509840071,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1610977084607,"results":"26","hashOfConfig":"25"},{"size":881,"mtime":1611510425272,"results":"27","hashOfConfig":"25"},{"size":334,"mtime":1611509840073,"results":"28","hashOfConfig":"25"},{"size":2904,"mtime":1611509840068,"results":"29","hashOfConfig":"25"},{"size":133,"mtime":1611509840063,"results":"30","hashOfConfig":"25"},{"size":452,"mtime":1611509840077,"results":"31","hashOfConfig":"25"},{"size":384,"mtime":1611509840075,"results":"32","hashOfConfig":"25"},{"size":221,"mtime":1611509840074,"results":"33","hashOfConfig":"25"},{"size":8238,"mtime":1611523617511,"results":"34","hashOfConfig":"25"},{"size":1194,"mtime":1611506716630,"results":"35","hashOfConfig":"25"},{"size":612,"mtime":1610991156295,"results":"36","hashOfConfig":"25"},{"size":456,"mtime":1611509840077,"results":"37","hashOfConfig":"25"},{"size":266,"mtime":1611509840070,"results":"38","hashOfConfig":"25"},{"size":2857,"mtime":1611510087171,"results":"39","hashOfConfig":"25"},{"size":67,"mtime":1610977084591,"results":"40","hashOfConfig":"25"},{"size":424,"mtime":1611063050703,"results":"41","hashOfConfig":"25"},{"size":937,"mtime":1611523574809,"results":"42","hashOfConfig":"25"},{"size":1163,"mtime":1611484286020,"results":"43","hashOfConfig":"25"},{"size":3395,"mtime":1611523093278,"results":"44","hashOfConfig":"25"},{"size":129,"mtime":1611509840058,"results":"45","hashOfConfig":"25"},{"size":527,"mtime":1611179746553,"results":"46","hashOfConfig":"25"},{"size":528,"mtime":1611522635220,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1ge9uil",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js",[],["102","103"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx",["104","105","106","107"],"import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport TestForm from '../test-form/TestForm';\r\nimport Questions from '../questionsComponents/questions'\r\nimport QuestionsService from '../../services/questionsService';\r\nimport QuestionsForm from '../questionsComponents/questionsForm';\r\nimport Route from '../routeComponent/Route';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <nav>\r\n        <ul>\r\n          <li><a href=\"/testcreate\">Test Form</a></li>\r\n          <li><a href=\"/questioncreate\">Question Form</a></li>\r\n        </ul>\r\n      </nav>\r\n      </header>\r\n      <div>\r\n        <Route path=\"/testcreate\">\r\n        <TestForm/>\r\n        </Route>\r\n        <Route path=\"/questioncreate\">\r\n          <Questions/>\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js",["108","109"],"import React from 'react';\r\nimport './TestForm.css';\r\nimport { connect } from 'react-redux';\r\nimport { selectQuestions } from '../../actions'\r\nimport FormInputs from './FormInputs';\r\nimport TestsSerevice from '../../services/testsService'\r\n\r\n\r\nfunction ColorRow(e) {\r\n    if (e.target.parentNode.tagName == \"TR\") {\r\n        if (e.target.parentNode.classList.contains(\"green\")) {\r\n            e.target.parentNode.classList.remove(\"green\");\r\n            /*console.log(\"disable\")*/\r\n        }\r\n        else {\r\n            e.target.parentNode.classList.add(\"green\");\r\n            /*console.log(\"enable\")*/\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nclass TestForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {dataTable:[]};\r\n        \r\n\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.setState({dataTable:this.renderQuestions()});\r\n    }\r\n\r\n    onSubmit = (test)=>{\r\n        test={...test, questions: this.props.selectedQuestions.map(q=>q.Id)};\r\n        alert(\"Test successfully created\");\r\n        TestsSerevice.addTest(test);\r\n       window.location.reload();\r\n    }\r\n    renderQuestions() {\r\n            let temp=[];\r\n            this.props.questions\r\n                .then(res => {\r\n                    res.data.map((question, index) => {\r\n                         temp.push(<tr key={question.Id} data-item={question}\r\n                            onClick={(e)=>{\r\n                                ColorRow(e)\r\n                                this.props.selectQuestions(question);}} >\r\n                            <td>{index}</td>\r\n                            <td>{question.Id}</td>\r\n                            <td>{question.Title}</td>\r\n                        </tr>)\r\n                        this.setState({dataTable:temp});\r\n                    })})}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"TestForm\">\r\n                <FormInputs renderField={this.renderQuestions} onSubmit={this.onSubmit}></FormInputs>\r\n                <div className=\"field\">\r\n                        <label>Chose questions</label>\r\n                        <table className=\"ui celled table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>ID</th>\r\n                                    <th>Content</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.dataTable}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        questions: state.questions,\r\n        selectedQuestions : state.questionsSelect\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectQuestions })(TestForm);\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts",[],["110","111"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js",["112"],"import QuestionService from '../services/questionsService';\r\nimport data from '../data/questions.data'\r\n\r\nconst questionReducer = ()=>{\r\n return QuestionService.getAllQuestions();\r\n}\r\n\r\n\r\n\r\nexport default questionReducer;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx",["113"],"import React, { Component } from \"react\";\r\nimport QuestionService from \"../../services/questionsService\"\r\nimport QuestionsForm from \"./questionsForm\";\r\nimport QuestionsTable from \"./questionsTable\";\r\n\r\nclass Questions extends Component {\r\n  state = {\r\n    questions: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  async getQuestions() {\r\n    const { data: questions } = await QuestionService.getAllQuestions();\r\n    this.setState({ questions });\r\n    console.log(this.state.questions)\r\n  }\r\n\r\n  addQuestion = async (question) => {\r\n    const addedQuestion = await QuestionService.addQuestion(question);\r\n    this.setState({ questions: [...this.state.questions, addedQuestion.data] });\r\n  };\r\n\r\n  showQuestion = (question) =>{\r\n    console.log(question);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container questions\">\r\n        {/* <div>\r\n          <QuestionsTable questions= {this.state.questions}/>\r\n        </div> */}\r\n        <div>\r\n          <h1>Add a new question</h1>\r\n          <QuestionsForm onAddQuestion={this.addQuestion} showQuestion={this.showQuestion}/>\r\n        </div>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\data\\questions.data.js",["114"],"import React from 'react';\r\n\r\nconst data =(\r\n    {\"questions\":[\r\n        {\"Id\": 1,\r\n        \"Title\": \"first-question\"},\r\n        {\"Id\": 2,\r\n        \"Title\": \"second-question\"},\r\n        {\"Id\": 3,\r\n        \"Title\": \"third-question\"}\r\n    ]})\r\n\r\n\r\nexport default data;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js",["115"],"export default {\r\n    serverUrl: \"http://localhost:4000\",\r\n  };\r\n  ","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["116"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"125","line":1,"column":25,"nodeType":"123","messageId":"124","endLine":1,"endColumn":34},{"ruleId":"121","severity":1,"message":"126","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":24},{"ruleId":"121","severity":1,"message":"127","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":10,"column":37,"nodeType":"130","messageId":"131","endLine":10,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":46,"column":52,"nodeType":"134","messageId":"135","endLine":46,"endColumn":54},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"136","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":12},{"ruleId":"121","severity":1,"message":"137","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":22},{"ruleId":"121","severity":1,"message":"138","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":1,"column":1,"nodeType":"141","endLine":3,"endColumn":5},{"ruleId":"121","severity":1,"message":"142","line":1,"column":10,"nodeType":"123","messageId":"124","endLine":1,"endColumn":16},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'QuestionsService' is defined but never used.","'QuestionsForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is defined but never used.","'QuestionsTable' is defined but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]