<<<<<<< HEAD
[{"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js":"1","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js":"2","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js":"4","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Navigation\\navigation.js":"5","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Routes.js":"6","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js":"7","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js":"8","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\answersReducer.js":"9","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js":"10","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\currentQuestion.js":"11","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js":"12","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\History\\history.js":"13","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts":"14","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts":"15","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx":"16","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\testsNav\\TestNav.jsx":"17","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-edit\\TestEdit.jsx":"18","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\certificate\\CertificateDisplay.jsx":"19","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx":"20","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx":"21","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx":"22","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\homeComponents\\home.jsx":"23","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\Exam.jsx":"24","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js":"25","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx":"26","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx":"27","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx":"28","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js":"29","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js":"30","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"31","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx":"32","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\QuestionPresent.jsx":"33","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx":"34","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"35","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\AnsQuestionForm.jsx":"36","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"37","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\examsService.ts":"38","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\ShowAnswers.jsx":"39","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\currentExamReducer.js":"40","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\AnswerPresent.jsx":"41"},{"size":778,"mtime":1612266126203,"results":"42","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":376,"mtime":1612266126182,"results":"45","hashOfConfig":"43"},{"size":661,"mtime":1612376089100,"results":"46","hashOfConfig":"43"},{"size":731,"mtime":1612266126178,"results":"47","hashOfConfig":"43"},{"size":2073,"mtime":1612371523272,"results":"48","hashOfConfig":"43"},{"size":342,"mtime":1612081449152,"results":"49","hashOfConfig":"43"},{"size":390,"mtime":1611860514730,"results":"50","hashOfConfig":"43"},{"size":163,"mtime":1612094848948,"results":"51","hashOfConfig":"43"},{"size":493,"mtime":1612081263509,"results":"52","hashOfConfig":"43"},{"size":289,"mtime":1612266126206,"results":"53","hashOfConfig":"43"},{"size":5723,"mtime":1612369938608,"results":"54","hashOfConfig":"43"},{"size":86,"mtime":1611840668752,"results":"55","hashOfConfig":"43"},{"size":617,"mtime":1612438811888,"results":"56","hashOfConfig":"43"},{"size":747,"mtime":1612300640330,"results":"57","hashOfConfig":"43"},{"size":3151,"mtime":1612359412352,"results":"58","hashOfConfig":"43"},{"size":517,"mtime":1611841906878,"results":"59","hashOfConfig":"43"},{"size":6863,"mtime":1612370347509,"results":"60","hashOfConfig":"43"},{"size":3503,"mtime":1612375323659,"results":"61","hashOfConfig":"43"},{"size":566,"mtime":1612266126194,"results":"62","hashOfConfig":"43"},{"size":4859,"mtime":1612266126200,"results":"63","hashOfConfig":"43"},{"size":13172,"mtime":1612300640293,"results":"64","hashOfConfig":"43"},{"size":622,"mtime":1612266126185,"results":"65","hashOfConfig":"43"},{"size":3653,"mtime":1612300158892,"results":"66","hashOfConfig":"43"},{"size":612,"mtime":1611490312094,"results":"67","hashOfConfig":"43"},{"size":6518,"mtime":1612369295088,"results":"68","hashOfConfig":"43"},{"size":1137,"mtime":1611840668832,"results":"69","hashOfConfig":"43"},{"size":763,"mtime":1611592240176,"results":"70","hashOfConfig":"43"},{"size":67,"mtime":1611173601459,"results":"71","hashOfConfig":"43"},{"size":1938,"mtime":1612439059601,"results":"72","hashOfConfig":"43"},{"size":2152,"mtime":1612300640264,"results":"73","hashOfConfig":"43"},{"size":447,"mtime":1612300640291,"results":"74","hashOfConfig":"43"},{"size":1221,"mtime":1612205973927,"results":"75","hashOfConfig":"43"},{"size":853,"mtime":1612300640184,"results":"76","hashOfConfig":"43"},{"size":548,"mtime":1611661903908,"results":"77","hashOfConfig":"43"},{"size":3539,"mtime":1612268729514,"results":"78","hashOfConfig":"43"},{"size":547,"mtime":1612300640109,"results":"79","hashOfConfig":"43"},{"size":473,"mtime":1612376424726,"results":"80","hashOfConfig":"43"},{"size":2920,"mtime":1612455117451,"results":"81","hashOfConfig":"43"},{"size":284,"mtime":1612438365831,"results":"82","hashOfConfig":"43"},{"size":6111,"mtime":1612453918566,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a0uvo0",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Navigation\\navigation.js",["169","170"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Routes.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js",["171"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js",["172"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\answersReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\currentQuestion.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js",["173","174"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\History\\history.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts",[],["175","176"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx",["177","178","179","180","181","182"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\testsNav\\TestNav.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-edit\\TestEdit.jsx",["183","184","185","186","187","188"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\certificate\\CertificateDisplay.jsx",["189","190","191","192"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx",["193"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx",["194"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\homeComponents\\home.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\Exam.jsx",["195"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx",["196","197","198","199","200","201","202"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx",["203"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js",["204"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js",["205","206"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["207"],"import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport AnswerInput from './multiAnswerInput';\r\n\r\nfunction MultipleChoiceQuestion(props) {  \r\n      return ( \r\n         <div>\r\n            <div>\r\n               <AnswerInput Id=\"1\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"2\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"3\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"4\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"13\" hidden = {true}>\r\n               <AnswerInput Id=\"5\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"14\" hidden = {true}>\r\n               <AnswerInput Id=\"6\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"15\" hidden = {true}>\r\n               <AnswerInput Id=\"7\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"16\" hidden = {true}>\r\n               <AnswerInput Id=\"8\" answerChanged={props.answerChanged} \r\n               correctAnswerChanged={props.correctAnswerChanged}/>\r\n            </div>          \r\n            <input type=\"button\" value = \"Add Answer\" onClick ={props.addAnswerInput}/>\r\n            <input type=\"button\" value = \"Remove Answer\" onClick ={props.removeAnswerInput}/>\r\n         </div>\r\n     );\r\n   }\r\nexport default MultipleChoiceQuestion;",["208","209"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\QuestionPresent.jsx",["210"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\AnsQuestionForm.jsx",["211","212","213"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\examsService.ts",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\ShowAnswers.jsx",["214"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\currentExamReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\Testing\\AnswerPresent.jsx",["215","216","217","218","219","220"],{"ruleId":"221","severity":1,"message":"222","line":2,"column":23,"nodeType":"223","messageId":"224","endLine":2,"endColumn":27},{"ruleId":"221","severity":1,"message":"225","line":2,"column":29,"nodeType":"223","messageId":"224","endLine":2,"endColumn":35},{"ruleId":"221","severity":1,"message":"226","line":1,"column":8,"nodeType":"223","messageId":"224","endLine":1,"endColumn":23},{"ruleId":"221","severity":1,"message":"227","line":1,"column":8,"nodeType":"223","messageId":"224","endLine":1,"endColumn":20},{"ruleId":"228","severity":1,"message":"229","line":13,"column":23,"nodeType":"230","messageId":"231","endLine":13,"endColumn":25},{"ruleId":"232","severity":1,"message":"233","line":40,"column":45,"nodeType":"234","messageId":"235","endLine":40,"endColumn":47},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"221","severity":1,"message":"240","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"241","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":36},{"ruleId":"221","severity":1,"message":"242","line":5,"column":22,"nodeType":"223","messageId":"224","endLine":5,"endColumn":28},{"ruleId":"221","severity":1,"message":"243","line":7,"column":5,"nodeType":"223","messageId":"224","endLine":7,"endColumn":18},{"ruleId":"221","severity":1,"message":"244","line":9,"column":8,"nodeType":"223","messageId":"224","endLine":9,"endColumn":16},{"ruleId":"221","severity":1,"message":"245","line":61,"column":13,"nodeType":"223","messageId":"224","endLine":61,"endColumn":16},{"ruleId":"221","severity":1,"message":"246","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":16},{"ruleId":"221","severity":1,"message":"226","line":10,"column":8,"nodeType":"223","messageId":"224","endLine":10,"endColumn":23},{"ruleId":"228","severity":1,"message":"229","line":14,"column":23,"nodeType":"230","messageId":"231","endLine":14,"endColumn":25},{"ruleId":"221","severity":1,"message":"247","line":61,"column":13,"nodeType":"223","messageId":"224","endLine":61,"endColumn":16},{"ruleId":"232","severity":1,"message":"233","line":64,"column":36,"nodeType":"234","messageId":"235","endLine":64,"endColumn":38},{"ruleId":"228","severity":1,"message":"229","line":68,"column":25,"nodeType":"230","messageId":"231","endLine":68,"endColumn":27},{"ruleId":"228","severity":1,"message":"248","line":8,"column":45,"nodeType":"230","messageId":"231","endLine":8,"endColumn":47},{"ruleId":"249","severity":1,"message":"250","line":8,"column":61,"nodeType":"230","messageId":"251","endLine":8,"endColumn":62},{"ruleId":"249","severity":1,"message":"250","line":8,"column":67,"nodeType":"230","messageId":"251","endLine":8,"endColumn":68},{"ruleId":"228","severity":1,"message":"229","line":29,"column":28,"nodeType":"230","messageId":"231","endLine":29,"endColumn":30},{"ruleId":"221","severity":1,"message":"252","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"233","line":17,"column":45,"nodeType":"234","messageId":"235","endLine":17,"endColumn":47},{"ruleId":"228","severity":1,"message":"248","line":34,"column":87,"nodeType":"230","messageId":"231","endLine":34,"endColumn":89},{"ruleId":"221","severity":1,"message":"253","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":19},{"ruleId":"221","severity":1,"message":"254","line":2,"column":21,"nodeType":"223","messageId":"224","endLine":2,"endColumn":26},{"ruleId":"221","severity":1,"message":"255","line":3,"column":10,"nodeType":"223","messageId":"224","endLine":3,"endColumn":36},{"ruleId":"221","severity":1,"message":"256","line":6,"column":7,"nodeType":"223","messageId":"224","endLine":6,"endColumn":12},{"ruleId":"221","severity":1,"message":"257","line":9,"column":7,"nodeType":"223","messageId":"224","endLine":9,"endColumn":15},{"ruleId":"221","severity":1,"message":"258","line":12,"column":7,"nodeType":"223","messageId":"224","endLine":12,"endColumn":19},{"ruleId":"221","severity":1,"message":"259","line":13,"column":7,"nodeType":"223","messageId":"224","endLine":13,"endColumn":13},{"ruleId":"260","severity":1,"message":"261","line":5,"column":5,"nodeType":"262","messageId":"263","endLine":8,"endColumn":6},{"ruleId":"264","severity":1,"message":"265","line":1,"column":1,"nodeType":"266","endLine":3,"endColumn":5},{"ruleId":"228","severity":1,"message":"248","line":18,"column":25,"nodeType":"230","messageId":"231","endLine":18,"endColumn":27},{"ruleId":"228","severity":1,"message":"248","line":50,"column":25,"nodeType":"230","messageId":"231","endLine":50,"endColumn":27},{"ruleId":"221","severity":1,"message":"267","line":1,"column":10,"nodeType":"223","messageId":"224","endLine":1,"endColumn":16},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"260","severity":1,"message":"261","line":6,"column":5,"nodeType":"262","messageId":"263","endLine":9,"endColumn":6},{"ruleId":"221","severity":1,"message":"254","line":1,"column":21,"nodeType":"223","messageId":"224","endLine":1,"endColumn":26},{"ruleId":"221","severity":1,"message":"240","line":2,"column":17,"nodeType":"223","messageId":"224","endLine":2,"endColumn":25},{"ruleId":"228","severity":1,"message":"248","line":23,"column":19,"nodeType":"230","messageId":"231","endLine":23,"endColumn":21},{"ruleId":"221","severity":1,"message":"268","line":5,"column":10,"nodeType":"223","messageId":"224","endLine":5,"endColumn":35},{"ruleId":"228","severity":1,"message":"248","line":7,"column":86,"nodeType":"230","messageId":"231","endLine":7,"endColumn":88},{"ruleId":"228","severity":1,"message":"248","line":8,"column":62,"nodeType":"230","messageId":"231","endLine":8,"endColumn":64},{"ruleId":"260","severity":1,"message":"261","line":10,"column":5,"nodeType":"262","messageId":"263","endLine":12,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":44,"column":33,"nodeType":"271","endLine":46,"endColumn":106},{"ruleId":"228","severity":1,"message":"248","line":57,"column":95,"nodeType":"230","messageId":"231","endLine":57,"endColumn":97},{"ruleId":"228","severity":1,"message":"248","line":58,"column":71,"nodeType":"230","messageId":"231","endLine":58,"endColumn":73},"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'QuestionService' is defined but never used.","'TestsService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["272"],"no-negated-in-lhs",["273"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'useRouteMatch' is defined but never used.","'TestEdit' is defined but never used.","'tmp' is assigned a value but never used.","'ReactDOM' is defined but never used.","'res' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","'Component' is defined but never used.","'reduxForm' is defined but never used.","'Field' is defined but never used.","'textChangeRangeIsUnchanged' is defined but never used.","'email' is assigned a value but never used.","'required' is assigned a value but never used.","'maxLength200' is assigned a value but never used.","'number' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","'parseConfigFileTextToJson' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js":"1","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js":"2","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js":"4","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js":"5","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js":"6","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js":"7","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\testReducer.js":"8","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts":"9","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js":"10","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\tests-list-componenet\\TestList.jsx":"11","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx":"12","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts":"13","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js":"14","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx":"15","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx":"16","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx":"17","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js":"18","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx":"19","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js":"20","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx":"21","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-edit\\TestEdit.jsx":"22","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"23","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx":"24","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx":"25","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"26","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"27","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\homeComponents\\home.jsx":"28","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Routes.js":"29","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\History\\history.js":"30","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Navigation\\navigation.js":"31","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\answersReducer.js":"32","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\currentQuestion.js":"33","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\testsNav\\TestNav.jsx":"34","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Testing\\Exam.jsx":"35","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Testing\\QuestionPresent.jsx":"36","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Testing\\AnsQuestionForm.jsx":"37","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\certificate\\CertificateDisplay.jsx":"38","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\examsService.ts":"39","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\organizationsService.ts":"40","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\organizationsReducer.js":"41","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\EntryPopup.jsx":"42","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\homeComponents\\organizationHome.jsx":"43"},{"size":756,"mtime":1612377538833,"results":"44","hashOfConfig":"45"},{"size":377,"mtime":1612377545715,"results":"46","hashOfConfig":"45"},{"size":339,"mtime":1612437516539,"results":"47","hashOfConfig":"45"},{"size":689,"mtime":1612381609143,"results":"48","hashOfConfig":"45"},{"size":5584,"mtime":1612377486112,"results":"49","hashOfConfig":"45"},{"size":162,"mtime":1611749864218,"results":"50","hashOfConfig":"45"},{"size":325,"mtime":1612377522395,"results":"51","hashOfConfig":"45"},{"size":375,"mtime":1612377527207,"results":"52","hashOfConfig":"45"},{"size":754,"mtime":1612377412188,"results":"53","hashOfConfig":"45"},{"size":478,"mtime":1612377524067,"results":"54","hashOfConfig":"45"},{"size":2500,"mtime":1612377500581,"results":"55","hashOfConfig":"45"},{"size":1051,"mtime":1612440266238,"results":"56","hashOfConfig":"45"},{"size":592,"mtime":1612377535869,"results":"57","hashOfConfig":"45"},{"size":612,"mtime":1610991156295,"results":"58","hashOfConfig":"45"},{"size":779,"mtime":1612377442392,"results":"59","hashOfConfig":"45"},{"size":3742,"mtime":1612377482621,"results":"60","hashOfConfig":"45"},{"size":1065,"mtime":1612377448433,"results":"61","hashOfConfig":"45"},{"size":1894,"mtime":1612381049735,"results":"62","hashOfConfig":"45"},{"size":16713,"mtime":1612444237634,"results":"63","hashOfConfig":"45"},{"size":61,"mtime":1612377507080,"results":"64","hashOfConfig":"45"},{"size":5677,"mtime":1612441227604,"results":"65","hashOfConfig":"45"},{"size":7067,"mtime":1612377479831,"results":"66","hashOfConfig":"45"},{"size":2152,"mtime":1612377425879,"results":"67","hashOfConfig":"45"},{"size":414,"mtime":1612377434077,"results":"68","hashOfConfig":"45"},{"size":835,"mtime":1612377406120,"results":"69","hashOfConfig":"45"},{"size":538,"mtime":1612377407163,"results":"70","hashOfConfig":"45"},{"size":539,"mtime":1612377439992,"results":"71","hashOfConfig":"45"},{"size":2397,"mtime":1612436608104,"results":"72","hashOfConfig":"45"},{"size":1895,"mtime":1612437351275,"results":"73","hashOfConfig":"45"},{"size":89,"mtime":1612377511270,"results":"74","hashOfConfig":"45"},{"size":1327,"mtime":1612437676208,"results":"75","hashOfConfig":"45"},{"size":161,"mtime":1612377514760,"results":"76","hashOfConfig":"45"},{"size":274,"mtime":1612377519064,"results":"77","hashOfConfig":"45"},{"size":688,"mtime":1612438475993,"results":"78","hashOfConfig":"45"},{"size":3608,"mtime":1612377492037,"results":"79","hashOfConfig":"45"},{"size":1050,"mtime":1612377495683,"results":"80","hashOfConfig":"45"},{"size":3431,"mtime":1612377488921,"results":"81","hashOfConfig":"45"},{"size":2796,"mtime":1612377457181,"results":"82","hashOfConfig":"45"},{"size":434,"mtime":1612377528809,"results":"83","hashOfConfig":"45"},{"size":307,"mtime":1612380667878,"results":"84","hashOfConfig":"45"},{"size":198,"mtime":1612381754765,"results":"85","hashOfConfig":"45"},{"size":637,"mtime":1612437390350,"results":"86","hashOfConfig":"45"},{"size":513,"mtime":1612437494645,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1ge9uil",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js",[],["192","193"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx",["194"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js",["195","196"],"import React from \"react\";\r\nimport \"./TestForm.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectQuestions, fetchQuestions } from \"../../actions\";\r\nimport FormInputs from \"./FormInputs\";\r\nimport TestsSerevice from \"../../services/testsService\";\r\nimport QuestionBox from \"../question-box-component/QuestionBox\";\r\nimport Popup from \"../popup-component/Popup\";\r\n\r\nfunction ColorRow(e) {\r\n  let TR = e.target;\r\n  while (TR.tagName != \"TR\") {\r\n    TR = TR.parentNode;\r\n  }\r\n  if (TR.classList.contains(\"green\")) {\r\n    TR.classList.remove(\"green\");\r\n    /*console.log(\"disable\")*/\r\n  } else {\r\n    TR.classList.add(\"green\");\r\n    /*console.log(\"enable\")*/\r\n  }\r\n}\r\n\r\nclass TestForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.fetchQuestions();\r\n    console.log(props);\r\n    this.state = {\r\n      dataTable: [],\r\n      filterTag: \"\",\r\n      questions: [],\r\n      showPopup: { show: false, content: null },\r\n    };\r\n    this.initQuestions();\r\n  }\r\n\r\n  initQuestions = () => {\r\n    console.log(\"data\", this.props.questions.data);\r\n\r\n    this.props.questions?.data?.map((res) => {\r\n      this.setState({ questions: res });\r\n    });\r\n  };\r\n\r\n  togglePopup = (question) => {\r\n    this.setState({\r\n      showPopup: { show: !this.state.showPopup.show, content: question },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuestions();\r\n  }\r\n\r\n  onSubmit = (test) => {\r\n    test = {\r\n      ...test,\r\n      questions: this.props.selectedQuestions.map((q) => q.Id),\r\n    };\r\n    alert(\"Test successfully created\");\r\n    TestsSerevice.addTest(test);\r\n    console.log(test);\r\n    window.location.reload();\r\n  };\r\n\r\n  checkTags = (tag) => {\r\n    const filterTags = this.state.filterTag.split(\",\");\r\n    console.log(\"FilterTag:\", filterTags);\r\n    console.log(\"tag:\", tag);\r\n    console.log(\"flag\", filterTags.includes(tag));\r\n    if (filterTags.includes(tag)) return true;\r\n    return false;\r\n  };\r\n\r\n  renderQuestions() {\r\n    if (this.state.filterTag !== \"\") {\r\n      let filterTags = this.state.filterTag.split(\",\");\r\n      return this.props.questions\r\n        .filter((q) => filterTags.some((t) => q.Tags.includes(t)))\r\n        .map((question, index) => {\r\n          return (\r\n            <tr\r\n              key={question.Id}\r\n              data-item={question}\r\n              onClick={(e) => {\r\n                ColorRow(e);\r\n                this.props.selectQuestions(question);\r\n              }}\r\n              className={\r\n                this.props.selectedQuestions.find((q) => q.Id === question.Id)\r\n                  ? \"green\"\r\n                  : \"\"\r\n              }>\r\n              <td>{index}</td>\r\n              <td>{question.Id}</td>\r\n              <td>\r\n                <QuestionBox question={question} />\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => this.togglePopup(question)}>\r\n                  Show\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        });\r\n    } else {\r\n      return this.props.questions.map((question, index) => {\r\n        return (\r\n          <tr\r\n            key={question.Id}\r\n            data-item={question}\r\n            onClick={(e) => {\r\n              ColorRow(e);\r\n              this.props.selectQuestions(question);\r\n            }}\r\n            className={\r\n              this.props.selectedQuestions.find((q) => q.Id === question.Id)\r\n                ? \"green\"\r\n                : \"\"\r\n            }>\r\n            <td>{index}</td>\r\n            <td>{question.Id}</td>\r\n            <td>\r\n              <QuestionBox question={question} />\r\n            </td>\r\n            <td>\r\n              {\" \"}\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => this.togglePopup(question)}>\r\n                Show\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  }\r\n  updateFiletrState = () => {\r\n    this.setState({\r\n      filterTag: window.document.getElementById(\"filterInput\").value,\r\n    });\r\n  };\r\n  FilerQuestions = () => {\r\n    this.setState({ dataTable: this.renderQuestions() });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"TestForm\">\r\n        <FormInputs\r\n          renderField={this.renderQuestions}\r\n          onSubmit={this.onSubmit}></FormInputs>\r\n        <div>\r\n          <input\r\n            id=\"filterInput\"\r\n            value={this.state.filterTag}\r\n            onChange={this.updateFiletrState}\r\n          />\r\n          <button onClick={this.FilerQuestions}>Search</button>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label className=\"white\">Chose questions</label>\r\n          <table className=\"ui celled table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Content</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderQuestions()}</tbody>\r\n          </table>\r\n        </div>\r\n        <div>\r\n          {this.state.showPopup.show ? (\r\n            <Popup\r\n              content={this.state.showPopup.content}\r\n              text=\"Close Me\"\r\n              closePopup={() => this.togglePopup(null)}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    questions: state.questions,\r\n    selectedQuestions: state.questionsSelect,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectQuestions, fetchQuestions })(\r\n  TestForm\r\n);\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js",[],["197","198"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js",["199"],"import QuestionService from \"../services/questionsService\";\r\n\r\nconst questionReducer = (state = [], action) => {\r\n  if (action.type === \"FETCH_QUESTIONS\") {\r\n    return action.payload;\r\n  }\r\n  if (action.type === \"FETCH_QUESTION\") {\r\n    return action.payload;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default questionReducer;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\testReducer.js",["200"],"import TestsService from \"../services/testsService\";\r\n\r\nconst testsReducer = (state = [], action) => {\r\n  //console.log(state);\r\n  if (action.type === \"FETCH_TEST\") {\r\n    return action.payload;\r\n  }\r\n  if (action.type === \"FETCH_TESTS\") {\r\n    //console.log(\"payload:\",action.payload)\r\n    return action.payload;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default testsReducer;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts",["201"],"import data from \"../data/questions.data\";\r\nimport http from \"./httpService\";\r\n\r\nconst serverRoute = \"/api/Questions/\";\r\n\r\nconst QuestionService = {\r\n  async getAllQuestions() {\r\n    return await await http.get(serverRoute + \"getQuestions\");\r\n  },\r\n  async getQuestionById(id: string) {\r\n    return await await http.get(serverRoute + `getquestionbyid/${id}`);\r\n  },\r\n\r\n  async addQuestion(question: any) {\r\n    return await http.post(serverRoute + \"addQuestion\", question);\r\n  },\r\n\r\n  async editQuestion(question: any, id: any) {\r\n    let questionToEdit = { question: question, id: id };\r\n    console.log(\"correct\", questionToEdit);\r\n    return await http.post(serverRoute + \"editQuestion\", questionToEdit);\r\n  },\r\n};\r\n\r\nexport default QuestionService;\r\n",["202","203"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\tests-list-componenet\\TestList.jsx",["204","205","206","207","208","209"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTests } from \"../../actions\";\r\nimport { BrowserRouter as Router, Link, useRouteMatch } from \"react-router-dom\";\r\nimport TestEdit from \"../test-edit/TestEdit\";\r\n\r\nclass TestList extends React.Component {\r\n  EXAMURL = \"/exam\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [] };\r\n  }\r\n  copyToClipboard(text) {\r\n    var dummy = document.createElement(\"textarea\");\r\n    // to avoid breaking orgain page when copying more words\r\n    // cant copy when adding below this code\r\n    // dummy.style.display = 'none'\r\n    document.body.appendChild(dummy);\r\n    //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\r\n    dummy.value = text;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n    alert(\"coppied\");\r\n  }\r\n  renderList() {\r\n    console.log(this.props);\r\n    return this.props.tests.map((t, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{t.Title}</td>\r\n          <td>\r\n            <button\r\n              className=\"ui button\"\r\n              onClick={() =>\r\n                this.copyToClipboard(\r\n                  `${window.location.protocol}//${window.location.host}${this.EXAMURL}/${t.Id}`\r\n                )\r\n              }>\r\n              Copy\r\n            </button>\r\n          </td>\r\n          <td>{t.questions.length}</td>\r\n          <td>\r\n            <div>\r\n              <Link to={`edittest/${t.Id}`}>\r\n                <button className=\"ui button\">Edit</button>\r\n              </Link>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.fetchTests();\r\n    let tmp = [];\r\n    console.log(\"props\", this.props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TestList\">\r\n        <div>\r\n          <table className=\"ui table\">\r\n            <thead>\r\n              <tr>\r\n                <td>Title</td>\r\n                <td>Link</td>\r\n                <td>Questions Sum</td>\r\n                <td>Actions</td>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderList()}</tbody>\r\n          </table>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tests: state.test,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchTests })(TestList);\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx",["210"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx",["211"],"import React from \"react\";\r\nimport \"./Popup.css\";\r\n\r\nclass Popup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  renderContent = () => {\r\n    let data = [];\r\n    for (var key in this.props.content) {\r\n      var value = this.props.content[key];\r\n      if (key !== \"Answers\")\r\n        data.push(<div className=\"item black\">{`${key}: ${value}`}</div>);\r\n      else {\r\n        data.push(\r\n          <div>\r\n            {key}:\r\n            {value.map((item) => (\r\n              <div\r\n                className={`item ${item.isCorrect ? \"greenText\" : \"redText\"}`}>\r\n                {item.Content}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return data;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"popup\">\r\n        <div className=\"popup_inner\">\r\n          <h3>\r\n            <div className=\"ui list\">{this.renderContent()}</div>\r\n          </h3>\r\n          <button onClick={this.props.closePopup}>close me</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Popup;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js",["212","213"],"import TestsService from \"../services/testsService\";\r\nimport QuestionService from \"../services/questionsService\";\r\nimport OrganizationsService from \"../services/organizationsService\";\r\n\r\nexport const selectQuestions = (question) => {\r\n  return {\r\n    type: \"SELECT_QUESTIONS\",\r\n    payload: question,\r\n  };\r\n};\r\n\r\nexport const fetchQuestions = () => async (dispatch) => {\r\n  const response = await QuestionService.getAllQuestions();\r\n  dispatch({ type: \"FETCH_QUESTIONS\", payload: response.data });\r\n};\r\n\r\nexport const fetchQuestion = (id) => async (dispatch) => {\r\n  const response = await QuestionService.getQuestionById(id);\r\n  if (response.status == 200) {\r\n    dispatch({ type: \"FETCH_QUESTION\", payload: response.data });\r\n  } else {\r\n    dispatch({ type: \"FETCH_QUESTION\", payload: null });\r\n  }\r\n};\r\n\r\nexport const clearselectQuestions = () => {\r\n  return {\r\n    type: \"CLEAR_SELECT_QUESTIONS\",\r\n    payload: null,\r\n  };\r\n};\r\n\r\nexport const fetchTest = (id) => async (dispatch) => {\r\n  const response = await TestsService.getTestById(id);\r\n  dispatch({ type: \"FETCH_TEST\", payload: response.data });\r\n};\r\n\r\nexport const fetchTests = () => async (dispatch) => {\r\n  const response = await TestsService.getAllTests();\r\n  dispatch({ type: \"FETCH_TESTS\", payload: response.data });\r\n};\r\n\r\nexport const addAnswer = (answer) => {\r\n  return { type: \"ADD_ANSWER\", payload: answer };\r\n};\r\n\r\nexport const moveQuestion = (id) => async (dispatch) => {\r\n  const response = await QuestionService.getQuestionById(id);\r\n  if (response.status == 200) {\r\n    dispatch({ type: \"MOVE_QUESTION\", payload: response.data });\r\n  } else {\r\n    dispatch({ type: \"MOVE_QUESTION\", payload: null });\r\n  }\r\n};\r\n\r\nexport const fetchOrganizations = () => async (dispatch) => {\r\n  const response = await OrganizationsService.getOrganizations();\r\n  dispatch({ type: \"FETCH_ORGANIZATIONS\", payload: response.data });\r\n};\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js",["214"],"export default {\r\n  serverUrl: \"http://localhost:4000\",\r\n};\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx",["215"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-edit\\TestEdit.jsx",["216","217","218","219","220"],"import React from \"react\";\r\nimport \"../test-form/TestForm.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectQuestions,\r\n  fetchTest,\r\n  fetchQuestion,\r\n  fetchQuestions,\r\n} from \"../../actions\";\r\nimport FormInputs from \"../test-form/FormInputs\";\r\nimport ReactDOM from \"react-dom\";\r\nimport QuestionBox from \"../question-box-component/QuestionBox\";\r\nimport Popup from \"../popup-component/Popup\";\r\nimport TestsService from \"../../services/testsService\";\r\nimport QuestionService from \"../../services/questionsService\";\r\n\r\nfunction ColorRow(e) {\r\n  let TR = e.target;\r\n  while (TR.tagName != \"TR\") {\r\n    TR = TR.parentNode;\r\n  }\r\n  console.log(\"TR\", TR);\r\n  if (TR.classList.contains(\"green\")) {\r\n    TR.classList.remove(\"green\");\r\n    /*console.log(\"disable\")*/\r\n  } else {\r\n    TR.classList.add(\"green\");\r\n    /*console.log(\"enable\")*/\r\n  }\r\n}\r\n\r\nclass TestEdit extends React.Component {\r\n  testId = this.props.match.params.testId;\r\n  test = null;\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"props\", props);\r\n    console.log(\"testId\", this.testId);\r\n\r\n    // TestsService.getTestById(myParam).then(res=>{\r\n    //     this.setState({Test: res.data});\r\n    //     console.log(this.state.Test);\r\n    //})\r\n\r\n    this.questionsRef = React.createRef();\r\n    this.state = {\r\n      dataTable: [],\r\n      Test: {},\r\n      filterTag: \"\",\r\n      questions: [],\r\n      questionsSelected: [],\r\n      showPopup: { show: false, content: null },\r\n    };\r\n    //console.log(\"test\",this.state.Test);\r\n  }\r\n\r\n  initQuestions = () => {\r\n    this.props.questions.then((res) => {\r\n      this.setState({ questions: res.data });\r\n      // console.log(this.state);\r\n    });\r\n  };\r\n\r\n  togglePopup = (question) => {\r\n    this.setState({\r\n      showPopup: { show: !this.state.showPopup.show, content: question },\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuestions();\r\n    let res = this.props.fetchTest(this.testId);\r\n    console.log(\"res\", res);\r\n    this.props.test.questions?.forEach((q) => {\r\n      this.props.selectQuestions(this.props.fetchQuestion(q));\r\n    });\r\n    this.props.test.questions?.map((q) => {\r\n      let TRList = window.document.getElementsByName(q.toString());\r\n      {\r\n        /*console.log(\"TR\",TRList)\r\n        console.log(TRList[0]);*/\r\n      }\r\n      if (TRList) TRList[0].classList.add(\"green\");\r\n    });\r\n\r\n    //console.log(\"DidMount state\",this.state.Test);\r\n  }\r\n\r\n  onSubmit = (test) => {\r\n    test = {\r\n      ...test,\r\n      questions: this.props.selectedQuestions.map((q) => q.Id),\r\n    };\r\n    console.log(\"test\", test);\r\n    alert(\"Test successfully created\");\r\n    TestsService.editTest(test);\r\n    //window.location.reload();\r\n  };\r\n  checkTags = (tag) => {\r\n    const filterTags = this.state.filterTag.split(\",\");\r\n    console.log(\"FilterTag:\", filterTags);\r\n    console.log(\"tag:\", tag);\r\n    console.log(\"flag\", filterTags.includes(tag));\r\n    if (filterTags.includes(tag)) return true;\r\n    return false;\r\n  };\r\n  renderQuestions() {\r\n    if (this.state.filterTag !== \"\") {\r\n      let filterTags = this.state.filterTag.split(\",\");\r\n      return this.props.questions\r\n        .filter((q) => filterTags.some((t) => q.Tags.includes(t)))\r\n        .map((question, index) => {\r\n          return (\r\n            <tr\r\n              key={question.Id}\r\n              data-item={question}\r\n              onClick={(e) => {\r\n                ColorRow(e);\r\n                this.props.selectQuestions(question);\r\n              }}\r\n              className={\r\n                this.props.selectedQuestions.find((q) => q.Id === question.Id)\r\n                  ? \"green\"\r\n                  : \"\"\r\n              }>\r\n              <td>{index}</td>\r\n              <td>{question.Id}</td>\r\n              <td>\r\n                <QuestionBox question={question} />\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                <button\r\n                  className=\"ui button\"\r\n                  onClick={() => this.togglePopup(question)}>\r\n                  Show\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          );\r\n        });\r\n    } else {\r\n      return this.props.questions.map((question, index) => {\r\n        return (\r\n          <tr\r\n            name={`${question.Id}`}\r\n            key={question.Id}\r\n            data-item={question}\r\n            onClick={(e) => {\r\n              ColorRow(e);\r\n              this.props.selectQuestions(question);\r\n            }}\r\n            ref={this.questionsRef}\r\n            className={\r\n              this.props.selectedQuestions.find((q) => q.Id === question.Id)\r\n                ? \"green\"\r\n                : \"\"\r\n            }>\r\n            <td>{index}</td>\r\n            <td>{question.Id}</td>\r\n            <td>\r\n              <QuestionBox question={question} />\r\n            </td>\r\n            <td>\r\n              {\" \"}\r\n              <button\r\n                className=\"ui button\"\r\n                onClick={() => this.togglePopup(question)}>\r\n                Show\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.test = this.props.test;\r\n\r\n    console.log(\"test\", this.props.test);\r\n  }\r\n  updateFiletrState = () => {\r\n    this.setState({\r\n      filterTag: window.document.getElementById(\"filterInput\").value,\r\n    });\r\n  };\r\n  FilerQuestions = () => {\r\n    this.setState({ dataTable: this.renderQuestions() });\r\n  };\r\n\r\n  render() {\r\n    //console.log(\"Render\", this.state)\r\n    //console.log(\"test from render\", this.props.test);\r\n    //console.log(\"test data from render\", this.props.test?.data);\r\n    return (\r\n      <div className=\"TestForm\">\r\n        <FormInputs renderField={this.renderQuestions} onSubmit={this.onSubmit}>\r\n          {this.props.test}\r\n        </FormInputs>\r\n        <div>\r\n          <input\r\n            id=\"filterInput\"\r\n            value={this.state.filterTag}\r\n            onChange={this.updateFiletrState}\r\n          />\r\n          <button onClick={this.FilerQuestions}>Search</button>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label className=\"white\">Chose questions</label>\r\n          <table className=\"ui celled table\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>ID</th>\r\n                <th>Content</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"tableHolder\">{this.renderQuestions()}</tbody>\r\n          </table>\r\n        </div>\r\n        <div>\r\n          {this.state.showPopup.show ? (\r\n            <Popup\r\n              content={this.state.showPopup.content}\r\n              text=\"Close Me\"\r\n              closePopup={() => this.togglePopup(null)}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    test: state.test,\r\n    questions: state.questions,\r\n    selectedQuestions: state.questionsSelect,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  selectQuestions,\r\n  fetchQuestion,\r\n  fetchTest,\r\n  fetchQuestions,\r\n})(TestEdit);\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["221","222"],"import { render } from \"@testing-library/react\";\r\nimport React, { Component } from \"react\";\r\nimport AnswerInput from \"./multiAnswerInput\";\r\n\r\nfunction MultipleChoiceQuestion(props) {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <AnswerInput\r\n          Id=\"1\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <AnswerInput\r\n          Id=\"2\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <AnswerInput\r\n          Id=\"3\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        <AnswerInput\r\n          Id=\"4\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div Id=\"13\" hidden={true}>\r\n        <AnswerInput\r\n          Id=\"5\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div Id=\"14\" hidden={true}>\r\n        <AnswerInput\r\n          Id=\"6\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div Id=\"15\" hidden={true}>\r\n        <AnswerInput\r\n          Id=\"7\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div Id=\"16\" hidden={true}>\r\n        <AnswerInput\r\n          Id=\"8\"\r\n          answerChanged={props.answerChanged}\r\n          correctAnswerChanged={props.correctAnswerChanged}\r\n        />\r\n      </div>\r\n      <input type=\"button\" value=\"Add Answer\" onClick={props.addAnswerInput} />\r\n      <input\r\n        type=\"button\"\r\n        value=\"Remove Answer\"\r\n        onClick={props.removeAnswerInput}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default MultipleChoiceQuestion;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\homeComponents\\home.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Routes.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\History\\history.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Navigation\\navigation.js",["223","224"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\answersReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\currentQuestion.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\testsNav\\TestNav.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Testing\\Exam.jsx",["225"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTest, moveQuestion, addAnswer } from \"../../actions\";\r\nimport QuestionPresent from \"./QuestionPresent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Exam.css\";\r\n\r\nclass Exam extends React.Component {\r\n  testId = this.props.match.params.testid;\r\n  qustionIndex = 0;\r\n  constructor(props) {\r\n    super(props);\r\n    props.fetchTest(this.testId);\r\n    this.state = {\r\n      currentQuestion: {},\r\n      showQuestions: false,\r\n      studentName: \"\",\r\n      studentId: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n  examNotDone = () => this.props.test.questions?.length > this.qustionIndex;\r\n  startExam(e) {\r\n    this.props.moveQuestion(this.props.test.questions[this.qustionIndex]);\r\n    this.setState({ showQuestions: !this.props.currentQuestion });\r\n  }\r\n  onSubmit = (answer) => {\r\n    this.qustionIndex = this.qustionIndex + 1;\r\n    if (this.examNotDone) {\r\n      this.props.moveQuestion(this.props.test.questions[this.qustionIndex]);\r\n      //console.log(\"props:\", this.props);\r\n    }\r\n    console.log(answer);\r\n    let sendAnswer = {\r\n      questionId: this.props.currentQuestion.Id,\r\n      answer,\r\n      correctAnswer: this.props.currentQuestion.Answers.filter(\r\n        (a) => a.isCorrect == true\r\n      ).map((a) => a.Content),\r\n    };\r\n    console.log(\"answer\", sendAnswer);\r\n    this.props.addAnswer(sendAnswer);\r\n    // if(this.examNotDone()){\r\n    //     React.ReactDom.render(\r\n    //         <Link><button>submit</button></Link>\r\n    //     )\r\n    // }\r\n  };\r\n\r\n  renderRegister = () => {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <label className=\"input\">FullName</label>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.studentName}\r\n            onChange={(e) => this.setState({ studentName: e.target.value })}\r\n            className=\"ui input\"></input>\r\n        </div>\r\n        <div>\r\n          <label className=\"input\">ID</label>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.studentId}\r\n            onChange={(e) => this.setState({ studentId: e.target.value })}\r\n            className=\"ui input\"></input>\r\n        </div>\r\n        <div>\r\n          <button onClick={(e) => this.startExam(e)}>Start</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    console.log(this.examNotDone());\r\n    return (\r\n      <div className=\"Exam\">\r\n        <div className=\"ui container\">\r\n          <div className=\"ui card\">{this.props.test?.Title}</div>\r\n          {this.state.showQuestions ? (\r\n            <QuestionPresent\r\n              onSubmit={this.onSubmit}\r\n              question={this.props.currentQuestion}></QuestionPresent>\r\n          ) : null}\r\n        </div>\r\n        {this.examNotDone() ? (\r\n          this.state.showQuestions ? null : (\r\n            this.renderRegister()\r\n          )\r\n        ) : (\r\n          <Link\r\n            to={{\r\n              pathname: \"/CertificateDisplay\",\r\n              formProps: {\r\n                test: this.props.test,\r\n                answers: this.props.answers,\r\n                student: {\r\n                  studentName: this.state.studentName,\r\n                  studentId: this.state.studentId,\r\n                },\r\n              },\r\n            }}>\r\n            Submit\r\n          </Link>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    test: state.test,\r\n    currentQuestion: state.currentQuestion,\r\n    answers: state.answers,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { fetchTest, moveQuestion, addAnswer })(\r\n  Exam\r\n);\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Testing\\QuestionPresent.jsx",["226"],"import React from \"react\";\r\nimport AnsQuestionForm from \"./AnsQuestionForm\";\r\nimport \"./QuestionPresent.css\";\r\n\r\nclass QuestionPresent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onSubmit = (answer) => {\r\n    this.props.onSubmit(answer);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"QuestionPresent\">\r\n        <div className=\"ui card\">\r\n          <label>{this.props.question?.Title}</label>\r\n        </div>\r\n        <div>\r\n          <h5 className=\"blue\">\r\n            {this.props.question?.Tags?.map((t) => t + \"||\")}\r\n          </h5>\r\n        </div>\r\n        <div className=\"ui attached segment\">\r\n          <h2> {this.props.question?.QuestionBody}</h2>\r\n        </div>\r\n        <div className=\"ui attached segment\">\r\n          <h4>{this.props.question?.ExtraInfo}</h4>\r\n        </div>\r\n        <div>\r\n          <AnsQuestionForm onSubmit={this.onSubmit}>\r\n            {this.props.question}\r\n          </AnsQuestionForm>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionPresent;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\Testing\\AnsQuestionForm.jsx",["227","228","229"],"import { reduxForm, Field } from \"redux-form\";\r\nimport React, { useState } from \"react\";\r\n\r\nclass AnsQuestionForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { answerValue: \"\", flagSingle: false };\r\n  }\r\n\r\n  createInput = (formProps) => {\r\n    console.log(formProps);\r\n    return (\r\n      <input\r\n        onChange={formProps.input.onChange}\r\n        name=\"group1\"\r\n        type={formProps.type}\r\n        value={formProps.children}></input>\r\n    );\r\n  };\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"ans\", e);\r\n    this.props.onSubmit(this.state.answerValue);\r\n    this.setState({\r\n      flagSingle:\r\n        this.props.children?.Answers?.reduce(function (n, val) {\r\n          return n + (val.isCorrect === true);\r\n        }, 0) == 1,\r\n    });\r\n    console.log(this.state.flagSingle);\r\n    this.setState({ answerValue: \"\" });\r\n    var inputs, index;\r\n    inputs = document.getElementsByTagName(\"input\");\r\n    for (index = 0; index < inputs.length; ++index) {\r\n      inputs[index].checked = false;\r\n    }\r\n  };\r\n  answerChange = (e) => {\r\n    if (this.props.children?.QuestionType === \"Choice\")\r\n      this.setState({ answerValue: e.target.value });\r\n    else {\r\n      if (this.state.answerValue === \"\")\r\n        this.setState({ answerValue: [e.target.value] });\r\n      else\r\n        this.setState({\r\n          answerValue: [e.target.value, ...this.state.answerValue],\r\n        });\r\n    }\r\n  };\r\n  renderSingleAnswer = () => {\r\n    return (\r\n      <form className=\"ui form\" onSubmit={this.onSubmit}>\r\n        {this.props.children?.Answers?.map((a, index) => {\r\n          return (\r\n            <div key={index} className=\"Field radio checkbox\">\r\n              <div className=\"ui card\">\r\n                <input\r\n                  onChange={this.answerChange}\r\n                  name=\"group1\"\r\n                  type=\"radio\"\r\n                  value={a.Content}></input>\r\n                {/*<Field name=\"answer\" component={createInput} type=\"radio\">{a.Content}</Field>*/}\r\n                <label>{a.Content}</label>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div className=\"nextbtn\">\r\n          <button type=\"submit\">Next</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n  renderMultiAnswer = () => {\r\n    return (\r\n      <form className=\"ui form\" onSubmit={this.onSubmit}>\r\n        {this.props.children?.Answers?.map((a, index) => {\r\n          return (\r\n            <div key={index} className=\"Field radio checkbox\">\r\n              <div className=\"ui card\">\r\n                <input\r\n                  onChange={this.answerChange}\r\n                  name=\"group1\"\r\n                  type=\"checkbox\"\r\n                  value={a.Content}></input>\r\n                {/*<Field name=\"answer\" component={createInput} type=\"radio\">{a.Content}</Field>*/}\r\n                <label>{a.Content}</label>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div className=\"nextbtn\">\r\n          {this.props.children ? <button type=\"submit\">Next</button> : null}\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"AnsQuestionForm\">\r\n        {this.props.children?.QuestionType === \"Choice\"\r\n          ? this.renderSingleAnswer()\r\n          : this.renderMultiAnswer()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default reduxForm({ form: \"QuestionAnswer\" })(AnsQuestionForm);\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\certificate\\CertificateDisplay.jsx",["230","231"],"import React from \"react\";\r\nimport { ThemeConsumer } from \"react-bootstrap/esm/ThemeProvider\";\r\nimport \"./CertificateDisplay.css\";\r\nimport ExamService from \"../../services/examsService\";\r\n\r\nclass CertificateDisplay extends React.Component {\r\n  formProps = this.props.location.formProps;\r\n  scoreOfQuestion = 100 / this.formProps.test.questions.length;\r\n  d = new Date();\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"loc\", this.formProps);\r\n    this.state = { grade: 0 };\r\n  }\r\n  calcScore = (answer, correct) => {\r\n    if (answer.length != correct.length) {\r\n      return 0;\r\n    } else {\r\n      for (let index = 0; index < answer.length; index++) {\r\n        const element = answer[index];\r\n        if (!correct.includes(element)) {\r\n          return 0;\r\n        }\r\n      }\r\n    }\r\n    return this.scoreOfQuestion;\r\n  };\r\n  componentDidMount() {\r\n    let add = 0;\r\n    this.formProps.answers.forEach((a) => {\r\n      if (!Array.isArray(a.answer)) {\r\n        a.answer = [a.answer];\r\n      }\r\n      let scoreForAnswer = this.calcScore(a.answer, a.correctAnswer);\r\n      console.log(\"score\", scoreForAnswer);\r\n      add = add + scoreForAnswer;\r\n      console.log(\"grade\", this.state.grade);\r\n    });\r\n    this.setState({ grade: add });\r\n    let exam = { ...this.formProps, Grade: add };\r\n    ExamService.addExam(exam);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CertificateDisplay\">\r\n        <div className=\"div1\">\r\n          <div className=\"div2\">\r\n            <span className=\"span1\">Certificate of Completion</span>\r\n            <br />\r\n            <br />\r\n            <span className=\"span2\">\r\n              <i>This is to certify that</i>\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <span className=\"span3\">\r\n              <b>\r\n                {this.formProps.student?.studentName},ID:\r\n                {this.formProps.student?.studentId}\r\n              </b>\r\n            </span>\r\n            <br />\r\n            <br />\r\n            <span className=\"span2\">\r\n              <i>has completed the Test</i>\r\n            </span>{\" \"}\r\n            <br />\r\n            <br />\r\n            <span className=\"span3\">{this.formProps.test?.Title}</span> <br />\r\n            <br />\r\n            <span className=\"span5\">\r\n              with score of <b>{this.state.grade}</b>\r\n            </span>{\" \"}\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <span className=\"span2\">\r\n              <i>dated</i>\r\n            </span>\r\n            <br />\r\n            <span className=\"span3\">\r\n              {\" \"}\r\n              {this.d.getDay()}/{this.d.getMonth()}/{this.d.getYear()}{\" \"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CertificateDisplay;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\examsService.ts",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\organizationsService.ts",["232"],"import data from \"../data/questions.data\";\r\nimport http from \"./httpService\";\r\n\r\nconst serverRoute = \"/api/Organizations/\";\r\n\r\nconst OrganizationsService = {\r\n  async getOrganizations() {\r\n    return await await http.get(serverRoute + \"getOrganizations\");\r\n  },\r\n};\r\n\r\nexport default OrganizationsService;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\organizationsReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\EntryPopup.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\homeComponents\\organizationHome.jsx",[],{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":4,"column":8,"nodeType":"239","messageId":"240","endLine":4,"endColumn":12},{"ruleId":"241","severity":1,"message":"242","line":12,"column":21,"nodeType":"243","messageId":"244","endLine":12,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":41,"column":43,"nodeType":"247","messageId":"248","endLine":41,"endColumn":45},{"ruleId":"233","replacedBy":"249"},{"ruleId":"235","replacedBy":"250"},{"ruleId":"237","severity":1,"message":"251","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":23},{"ruleId":"237","severity":1,"message":"252","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":20},{"ruleId":"253","severity":1,"message":"254","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":12},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"255","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":25},{"ruleId":"237","severity":1,"message":"256","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"257","line":4,"column":27,"nodeType":"239","messageId":"240","endLine":4,"endColumn":33},{"ruleId":"237","severity":1,"message":"258","line":4,"column":41,"nodeType":"239","messageId":"240","endLine":4,"endColumn":54},{"ruleId":"237","severity":1,"message":"259","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":16},{"ruleId":"237","severity":1,"message":"260","line":58,"column":9,"nodeType":"239","messageId":"240","endLine":58,"endColumn":12},{"ruleId":"237","severity":1,"message":"261","line":1,"column":17,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":5,"column":3,"nodeType":"264","messageId":"265","endLine":7,"endColumn":4},{"ruleId":"241","severity":1,"message":"266","line":19,"column":23,"nodeType":"243","messageId":"244","endLine":19,"endColumn":25},{"ruleId":"241","severity":1,"message":"266","line":49,"column":23,"nodeType":"243","messageId":"244","endLine":49,"endColumn":25},{"ruleId":"267","severity":1,"message":"268","line":1,"column":1,"nodeType":"269","endLine":3,"endColumn":3},{"ruleId":"245","severity":1,"message":"246","line":25,"column":43,"nodeType":"247","messageId":"248","endLine":25,"endColumn":45},{"ruleId":"237","severity":1,"message":"270","line":11,"column":8,"nodeType":"239","messageId":"240","endLine":11,"endColumn":16},{"ruleId":"237","severity":1,"message":"251","line":15,"column":8,"nodeType":"239","messageId":"240","endLine":15,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":19,"column":21,"nodeType":"243","messageId":"244","endLine":19,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":77,"column":40,"nodeType":"247","messageId":"248","endLine":77,"endColumn":42},{"ruleId":"271","severity":1,"message":"272","line":79,"column":7,"nodeType":"273","messageId":"274","endLine":82,"endColumn":8},{"ruleId":"237","severity":1,"message":"275","line":1,"column":10,"nodeType":"239","messageId":"240","endLine":1,"endColumn":16},{"ruleId":"237","severity":1,"message":"261","line":2,"column":17,"nodeType":"239","messageId":"240","endLine":2,"endColumn":26},{"ruleId":"237","severity":1,"message":"276","line":2,"column":23,"nodeType":"239","messageId":"240","endLine":2,"endColumn":27},{"ruleId":"237","severity":1,"message":"277","line":2,"column":29,"nodeType":"239","messageId":"240","endLine":2,"endColumn":35},{"ruleId":"241","severity":1,"message":"266","line":38,"column":28,"nodeType":"243","messageId":"244","endLine":38,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":6,"column":3,"nodeType":"264","messageId":"265","endLine":8,"endColumn":4},{"ruleId":"237","severity":1,"message":"278","line":1,"column":21,"nodeType":"239","messageId":"240","endLine":1,"endColumn":26},{"ruleId":"237","severity":1,"message":"255","line":2,"column":17,"nodeType":"239","messageId":"240","endLine":2,"endColumn":25},{"ruleId":"241","severity":1,"message":"266","line":28,"column":15,"nodeType":"243","messageId":"244","endLine":28,"endColumn":17},{"ruleId":"237","severity":1,"message":"279","line":2,"column":10,"nodeType":"239","messageId":"240","endLine":2,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":16,"column":23,"nodeType":"243","messageId":"244","endLine":16,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":1,"column":8,"nodeType":"239","messageId":"240","endLine":1,"endColumn":12},"no-native-reassign",["280"],"no-negated-in-lhs",["281"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["280"],["281"],"'QuestionService' is defined but never used.","'TestsService' is defined but never used.","@typescript-eslint/no-unused-vars","'data' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'useRouteMatch' is defined but never used.","'TestEdit' is defined but never used.","'tmp' is assigned a value but never used.","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Expected '===' and instead saw '=='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ReactDOM' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'render' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Field' is defined but never used.","'ThemeConsumer' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 455f89607e74cfc28138d49ee90022b7a323cbb1
