[{"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js":"1","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js":"2","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js":"4","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js":"5","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js":"6","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js":"7","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts":"8","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\testReducer.js":"9","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js":"10","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx":"11","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\tests-list-componenet\\TestList.jsx":"12","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js":"13","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts":"14","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx":"15","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx":"16","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx":"17","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js":"18","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js":"19","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx":"20","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx":"21","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"22","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx":"23","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx":"24","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"25","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"26"},{"size":835,"mtime":1611509840071,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1610977084607,"results":"29","hashOfConfig":"28"},{"size":998,"mtime":1611675681643,"results":"30","hashOfConfig":"28"},{"size":400,"mtime":1611663591460,"results":"31","hashOfConfig":"28"},{"size":133,"mtime":1611509840063,"results":"32","hashOfConfig":"28"},{"size":6043,"mtime":1611680232466,"results":"33","hashOfConfig":"28"},{"size":384,"mtime":1611509840075,"results":"34","hashOfConfig":"28"},{"size":452,"mtime":1611509840077,"results":"35","hashOfConfig":"28"},{"size":155,"mtime":1611663591462,"results":"36","hashOfConfig":"28"},{"size":180,"mtime":1611663591461,"results":"37","hashOfConfig":"28"},{"size":1139,"mtime":1611681395070,"results":"38","hashOfConfig":"28"},{"size":1663,"mtime":1611663591457,"results":"39","hashOfConfig":"28"},{"size":612,"mtime":1610991156295,"results":"40","hashOfConfig":"28"},{"size":358,"mtime":1611663591464,"results":"41","hashOfConfig":"28"},{"size":3062,"mtime":1611675572731,"results":"42","hashOfConfig":"28"},{"size":763,"mtime":1611663591453,"results":"43","hashOfConfig":"28"},{"size":1166,"mtime":1611663591451,"results":"44","hashOfConfig":"28"},{"size":67,"mtime":1610977084591,"results":"45","hashOfConfig":"28"},{"size":129,"mtime":1611509840058,"results":"46","hashOfConfig":"28"},{"size":4281,"mtime":1611681242932,"results":"47","hashOfConfig":"28"},{"size":9199,"mtime":1611665280135,"results":"48","hashOfConfig":"28"},{"size":3368,"mtime":1611583287981,"results":"49","hashOfConfig":"28"},{"size":936,"mtime":1611579148011,"results":"50","hashOfConfig":"28"},{"size":424,"mtime":1611063050703,"results":"51","hashOfConfig":"28"},{"size":548,"mtime":1611584216955,"results":"52","hashOfConfig":"28"},{"size":547,"mtime":1611584216387,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1ge9uil",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js",[],["113","114"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx",["115","116","117"],"import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport TestForm from '../test-form/TestForm';\r\nimport Questions from '../questionsComponents/questions'\r\nimport QuestionsService from '../../services/questionsService';\r\nimport TestList from '../tests-list-componenet/TestList';\r\nimport Route from '../routeComponent/Route';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <nav>\r\n        <ul>\r\n          <li><a href=\"/testcreate\">Test Form</a></li>\r\n          <li><a href=\"/questioncreate\">Questions</a></li>\r\n          <li><a href=\"/testlist\">Test List</a></li>\r\n        </ul>\r\n      </nav>\r\n      </header>\r\n      <div>\r\n        <Route path=\"/testcreate\">\r\n        <TestForm/>\r\n        </Route>\r\n        <Route path=\"/questioncreate\">\r\n          <Questions/>\r\n        </Route>\r\n        <Route path=\"/testlist\">\r\n          <TestList/>\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js",["118","119"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts",[],["120","121"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\testReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx",["122","123"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\tests-list-componenet\\TestList.jsx",["124","125","126"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './TestList.css';\r\n\r\nconst TestList = (props) => {\r\n    console.log(props);\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        let tmp = [];\r\n        props.tests.then(res => {\r\n\r\n            res.data.map((t, index) => {\r\n                console.log(t);\r\n                {\r\n                    tmp.push(<tr key={index}>\r\n                        <td>\r\n                            {t.Title}\r\n                        </td>\r\n                        <td></td>\r\n                        <td>\r\n                            {t.questions.length}\r\n                        </td>\r\n                        <td>\r\n                            <div>\r\n                                <button>Edit</button>\r\n                            </div>\r\n                        </td>\r\n                    </tr>)\r\n                }\r\n            })\r\n            setData(tmp);\r\n            console.log(tmp);\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"TestList\">\r\n            <table className=\"ui table\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Title</td>\r\n                        <td>Link</td>\r\n                        <td>Questions Sum</td>\r\n                        <td>Actions</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        tests: state.tests\r\n    })\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(TestList)\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx",["127"],"import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass FormInputs extends React.Component {\r\n\r\n\r\n    // onSubmit = (FormValues)=>{\r\n    //     console.log(\"ptops:\",this.props);\r\n    //     console.log(\"FromValues:\",FormValues);\r\n    //     this.props.onSubmit(FormValues);\r\n    // }\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    createInput(formProps) {\r\n\r\n        return (\r\n            <input {...formProps.input} type={formProps.type} />\r\n        )\r\n    }\r\n\r\n    createTextArea(formProps) {\r\n        return <textarea onChange={formProps.input.onChange} value={formProps.input.value} />\r\n    }\r\n    createSelect(formProps) {\r\n        return (<select id=\"Language\" onChange={formProps.input.onChange}>\r\n            <option value=\"\">Language</option>\r\n            <option value=\"0\">Hebrew</option>\r\n            <option value=\"1\">English</option>\r\n        </select>)\r\n    }\r\n\r\n\r\n\r\n    onSubmit=(e)=>{\r\n        this.props.onSubmit(e);\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form id=\"createTestForm\" className=\"ui form\"\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)} method=\"post\">\r\n                <div className=\"field\">\r\n                    <label>Test Title</label>\r\n                    <Field name=\"Title\" component={this.createInput} />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label>Lenguage</label>\r\n                    <Field name=\"Language\" component={this.createSelect} />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Passing grade</label>\r\n                    <Field name=\"PassingGrade\" type=\"number\" component={this.createInput} />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label>Content</label>\r\n                    <Field name=\"Content\" component={this.createTextArea} />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <Field name=\"email\" type=\"email\" component={this.createInput} />\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Success Message</label>\r\n                        <Field name=\"SuccessMes\" type=\"text\" component={this.createInput} />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label>Failure Message</label>\r\n                        <Field name=\"FailureMes\" type=\"text\" component={this.createInput} />\r\n                    </div>\r\n                </div>\r\n                    <div className=\"field\">\r\n                        <label>\"Show answers on submit\"</label>\r\n                        <Field name=\"ShowAnswers\" type=\"checkbox\" component={this.createInput}/>\r\n                    </div>\r\n\r\n\r\n                <input type=\"submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default reduxForm({ form: 'TestCreate' })(FormInputs)\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js",["128"],"export default {\r\n    serverUrl: \"http://localhost:4000\",\r\n  };\r\n  ","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx",["129"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["130"],"import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport AnswerInput from './multiAnswerInput';\r\n\r\nclass MultipleChoiceQuestion extends Component {\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state = { Index: 13 }\r\n   }\r\n   \r\n   addAnswerInput = (e) =>{\r\n      if(this.state.Index <= 16){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = false;\r\n         this.props.updateInputsNum(this.state.Index - 8);\r\n         if(this.state.Index < 16){\r\n            this.setState({ Index: this.state.Index + 1 });\r\n         }\r\n         else{\r\n            alert(\"Reached the maximum limit of answers you can add\");\r\n         }\r\n      }     \r\n   }\r\n\r\n   removeAnswerInput = (e) =>{\r\n      if(this.state.Index >= 13){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = true;\r\n         this.props.updateInputsNum(this.state.Index - 9);\r\n         if(this.state.Index > 13){           \r\n            this.setState({ Index: this.state.Index - 1 });\r\n         }\r\n         else{\r\n            alert(\"You can not remove any more answers\");\r\n         }\r\n      }\r\n   }\r\n\r\n   render(){\r\n      return ( \r\n         <div>\r\n            <div>\r\n               <AnswerInput Id=\"1\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"2\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"3\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"4\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"13\" hidden = {true}>\r\n               <AnswerInput Id=\"5\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"14\" hidden = {true}>\r\n               <AnswerInput Id=\"6\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"15\" hidden = {true}>\r\n               <AnswerInput Id=\"7\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"16\" hidden = {true}>\r\n               <AnswerInput Id=\"8\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>          \r\n            <div>\r\n               <button className=\"btn btn-primary btn-sm\">Add Question</button>\r\n            </div>\r\n            <input type=\"button\" value = \"Add Answer\" onClick ={this.addAnswerInput}/>\r\n            <input type=\"button\" value = \"Remove Answer\" onClick ={this.removeAnswerInput}/>\r\n         </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default MultipleChoiceQuestion;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":16,"nodeType":"137","messageId":"138","endLine":1,"endColumn":24},{"ruleId":"135","severity":1,"message":"139","line":1,"column":25,"nodeType":"137","messageId":"138","endLine":1,"endColumn":34},{"ruleId":"135","severity":1,"message":"140","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":24},{"ruleId":"141","severity":1,"message":"142","line":13,"column":23,"nodeType":"143","messageId":"144","endLine":13,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":74,"column":48,"nodeType":"147","messageId":"148","endLine":74,"endColumn":50},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"149","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":22},{"ruleId":"135","severity":1,"message":"150","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":12,"column":37,"nodeType":"147","messageId":"148","endLine":12,"endColumn":39},{"ruleId":"151","severity":1,"message":"152","line":14,"column":17,"nodeType":"153","messageId":"154","endLine":29,"endColumn":18},{"ruleId":"155","severity":1,"message":"156","line":34,"column":8,"nodeType":"157","endLine":34,"endColumn":10,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":13,"column":5,"nodeType":"161","messageId":"162","endLine":15,"endColumn":6},{"ruleId":"163","severity":1,"message":"164","line":1,"column":1,"nodeType":"165","endLine":3,"endColumn":5},{"ruleId":"145","severity":1,"message":"146","line":28,"column":44,"nodeType":"147","messageId":"148","endLine":28,"endColumn":46},{"ruleId":"135","severity":1,"message":"166","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":16},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'QuestionsService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'QuestionsTable' is defined but never used.","'Route' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.tests'. Either include it or remove the dependency array.","ArrayExpression",["169"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [props.tests]",{"range":"172","text":"173"},[1017,1019],"[props.tests]"]