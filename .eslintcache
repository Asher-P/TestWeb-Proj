<<<<<<< HEAD
[{"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js":"1","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js":"2","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js":"4","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Route.js":"5","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js":"6","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts":"7","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js":"8","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js":"9","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx":"10","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx":"11","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js":"12","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts":"13","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\data\\questions.data.js":"14","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx":"15","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx":"16","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js":"17","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js":"18","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx":"19","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"20","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx":"21","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx":"22","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"23","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"24","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx":"25","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx":"26","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js":"27"},{"size":812,"mtime":1611225439397,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1002,"mtime":1611593257247,"results":"31","hashOfConfig":"29"},{"size":400,"mtime":1611654262336,"results":"32","hashOfConfig":"29"},{"size":128,"mtime":1593456694000,"results":"33","hashOfConfig":"29"},{"size":6051,"mtime":1611604561079,"results":"34","hashOfConfig":"29"},{"size":452,"mtime":1611181649369,"results":"35","hashOfConfig":"29"},{"size":180,"mtime":1611654224920,"results":"36","hashOfConfig":"29"},{"size":384,"mtime":1611654229274,"results":"37","hashOfConfig":"29"},{"size":8238,"mtime":1611565802193,"results":"38","hashOfConfig":"29"},{"size":1194,"mtime":1611565802191,"results":"39","hashOfConfig":"29"},{"size":612,"mtime":1611490312094,"results":"40","hashOfConfig":"29"},{"size":358,"mtime":1611654409719,"results":"41","hashOfConfig":"29"},{"size":266,"mtime":1611183661864,"results":"42","hashOfConfig":"29"},{"size":3061,"mtime":1611586464453,"results":"43","hashOfConfig":"29"},{"size":763,"mtime":1611592240176,"results":"44","hashOfConfig":"29"},{"size":67,"mtime":1611173601459,"results":"45","hashOfConfig":"29"},{"size":129,"mtime":1611218750558,"results":"46","hashOfConfig":"29"},{"size":424,"mtime":1611173601424,"results":"47","hashOfConfig":"29"},{"size":3395,"mtime":1611565802189,"results":"48","hashOfConfig":"29"},{"size":937,"mtime":1611565802188,"results":"49","hashOfConfig":"29"},{"size":1163,"mtime":1611565802195,"results":"50","hashOfConfig":"29"},{"size":528,"mtime":1611490040717,"results":"51","hashOfConfig":"29"},{"size":527,"mtime":1611490557426,"results":"52","hashOfConfig":"29"},{"size":1166,"mtime":1611592806392,"results":"53","hashOfConfig":"29"},{"size":1663,"mtime":1611656898354,"results":"54","hashOfConfig":"29"},{"size":155,"mtime":1611654613954,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"a0uvo0",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js",[],["119","120"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx",["121","122","123"],"import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport TestForm from '../test-form/TestForm';\r\nimport Questions from '../questionsComponents/questions'\r\nimport QuestionsService from '../../services/questionsService';\r\nimport TestList from '../tests-list-componenet/TestList';\r\nimport Route from '../routeComponent/Route';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <nav>\r\n        <ul>\r\n          <li><a href=\"/testcreate\">Test Form</a></li>\r\n          <li><a href=\"/questioncreate\">Question Form</a></li>\r\n          <li><a href=\"/testlist\">Test List</a></li>\r\n        </ul>\r\n      </nav>\r\n      </header>\r\n      <div>\r\n        <Route path=\"/testcreate\">\r\n        <TestForm/>\r\n        </Route>\r\n        <Route path=\"/questioncreate\">\r\n          <Questions/>\r\n        </Route>\r\n        <Route path=\"/testlist\">\r\n          <TestList/>\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Route.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js",["124","125"],"import React from 'react';\r\nimport './TestForm.css';\r\nimport { connect } from 'react-redux';\r\nimport { selectQuestions } from '../../actions'\r\nimport FormInputs from './FormInputs';\r\nimport TestsSerevice from '../../services/testsService'\r\nimport QuestionBox from '../question-box-component/QuestionBox';\r\nimport Popup from '../popup-component/Popup'\r\n\r\n\r\nfunction ColorRow(e) {\r\n    let TR = e.target;\r\n    while (TR.tagName != \"TR\") {\r\n        TR = TR.parentNode;\r\n    }\r\n    if (TR.classList.contains(\"green\")) {\r\n        TR.classList.remove(\"green\");\r\n        /*console.log(\"disable\")*/\r\n    }\r\n    else {\r\n        TR.classList.add(\"green\");\r\n        /*console.log(\"enable\")*/\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nclass TestForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = { dataTable: [], filterTag: \"\", questions: [], showPopup:{show:false, content:null} };\r\n        this.initQuestions();\r\n\r\n    }\r\n\r\n    initQuestions = () => {\r\n        this.props.questions.then(res => {\r\n            this.setState({ questions: res.data });\r\n        })\r\n    }\r\n\r\n    togglePopup=(question)=> {\r\n        this.setState({\r\n            showPopup:{show: !this.state.showPopup.show, content:question}\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ dataTable: this.renderQuestions() });\r\n    }\r\n\r\n    onSubmit = (test) => {\r\n        test = { ...test, questions: this.props.selectedQuestions.map(q => q.Id) };\r\n        alert(\"Test successfully created\");\r\n        TestsSerevice.addTest(test);\r\n        window.location.reload();\r\n    }\r\n    checkTags=(tag)=>{\r\n            const filterTags = this.state.filterTag.split(\",\");\r\n            console.log(\"FilterTag:\",filterTags);\r\n            console.log(\"tag:\",tag);\r\n            console.log(\"flag\", filterTags.includes(tag));\r\n            if(filterTags.includes(tag))\r\n                return true;\r\n        return false\r\n        \r\n\r\n    }\r\n    renderQuestions() {\r\n        let temp = [];\r\n        this.props.questions\r\n            .then(res => {\r\n                res.data.map((question, index) => {\r\n                    if (this.state.filterTag !== \"\") {\r\n                        question.Tags.forEach(t=>{\r\n                        if (this.checkTags(t)) {\r\n                            console.log(\"push\");\r\n                            temp.push(\r\n                                <tr key={question.Id} data-item={question}\r\n                                    onClick={(e) => {\r\n                                        ColorRow(e)\r\n                                        this.props.selectQuestions(question);\r\n                                    }}\r\n                                    className={(this.props.selectedQuestions.find(q => q.Id === question.Id)) ? \"green\" : \"\"}>\r\n                                    <td>{index}</td>\r\n                                    <td>{question.Id}</td>\r\n                                    <td><QuestionBox question={question} /></td>\r\n                                    <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n\r\n                                </tr>)\r\n                            this.setState({ dataTable: temp });\r\n                        }                        })\r\n                    }\r\n                    else {\r\n                        temp.push(<tr key={question.Id} data-item={question}\r\n                            onClick={(e) => {\r\n                                ColorRow(e)\r\n                                this.props.selectQuestions(question);\r\n                            }}\r\n                            className={(this.props.selectedQuestions.find(q => q.Id === question.Id)) ? \"green\" : \"\"}>\r\n                            <td>{index}</td>\r\n                            <td>{question.Id}</td>\r\n                            <td><QuestionBox question={question} /></td>\r\n                            <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n                        </tr>)\r\n                        this.setState({ dataTable: temp });\r\n\r\n                    }\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    updateFiletrState = () => {\r\n        this.setState({ filterTag: window.document.getElementById(\"filterInput\").value });\r\n    }\r\n    FilerQuestions = () => {\r\n        this.setState({ dataTable: this.renderQuestions() });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"TestForm\">\r\n                <FormInputs renderField={this.renderQuestions} onSubmit={this.onSubmit}></FormInputs>\r\n                <div>\r\n                    <input id=\"filterInput\" value={this.state.filterTag} onChange={this.updateFiletrState} />\r\n                    <button onClick={this.FilerQuestions}>Search</button>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"white\">Chose questions</label>\r\n                    <table className=\"ui celled table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>ID</th>\r\n                                <th>Content</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.dataTable}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>{this.state.showPopup.show ?\r\n                    <Popup\r\n                        content = {this.state.showPopup.content}\r\n                        text='Close Me'\r\n                        closePopup={()=>this.togglePopup(null)}\r\n                    />\r\n                    : null\r\n                }</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        questions: state.questions,\r\n        selectedQuestions: state.questionsSelect\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectQuestions })(TestForm);\r\n","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts",[],["126","127"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx",["128"],"import React, { Component } from \"react\";\r\nimport QuestionService from \"../../services/questionsService\"\r\nimport QuestionsForm from \"./questionsForm\";\r\nimport QuestionsTable from \"./questionsTable\";\r\n\r\nclass Questions extends Component {\r\n  state = {\r\n    questions: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  async getQuestions() {\r\n    const { data: questions } = await QuestionService.getAllQuestions();\r\n    this.setState({ questions });\r\n    console.log(this.state.questions)\r\n  }\r\n\r\n  addQuestion = async (question) => {\r\n    const addedQuestion = await QuestionService.addQuestion(question);\r\n    this.setState({ questions: [...this.state.questions, addedQuestion.data] });\r\n  };\r\n\r\n  showQuestion = (question) =>{\r\n    console.log(question);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container questions\">\r\n        {/* <div>\r\n          <QuestionsTable questions= {this.state.questions}/>\r\n        </div> */}\r\n        <div>\r\n          <h1>Add a new question</h1>\r\n          <QuestionsForm onAddQuestion={this.addQuestion} showQuestion={this.showQuestion}/>\r\n        </div>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\data\\questions.data.js",["129"],"import React from 'react';\r\n\r\nconst data =(\r\n    {\"questions\":[\r\n        {\"Id\": 1,\r\n        \"Title\": \"first-question\"},\r\n        {\"Id\": 2,\r\n        \"Title\": \"second-question\"},\r\n        {\"Id\": 3,\r\n        \"Title\": \"third-question\"}\r\n    ]})\r\n\r\n\r\nexport default data;","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx",["130"],"import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\n\r\n\r\nclass FormInputs extends React.Component {\r\n\r\n\r\n    // onSubmit = (FormValues)=>{\r\n    //     console.log(\"ptops:\",this.props);\r\n    //     console.log(\"FromValues:\",FormValues);\r\n    //     this.props.onSubmit(FormValues);\r\n    // }\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    createInput(formProps) {\r\n\r\n        return (\r\n            <input {...formProps.input} type={formProps.type} />\r\n        )\r\n    }\r\n\r\n    createTextArea(formProps) {\r\n        return <textarea onChange={formProps.input.onChange} value={formProps.input.value} />\r\n    }\r\n    createSelect(formProps) {\r\n        return (<select id=\"Lenguge\" onChange={formProps.input.onChange}>\r\n            <option value=\"\">Lenguage</option>\r\n            <option value=\"0\">Hebrew</option>\r\n            <option value=\"1\">English</option>\r\n        </select>)\r\n    }\r\n\r\n\r\n\r\n    onSubmit=(e)=>{\r\n        this.props.onSubmit(e);\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form id=\"createTestForm\" className=\"ui form\"\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)} method=\"post\">\r\n                <div className=\"field\">\r\n                    <label>Test Title</label>\r\n                    <Field name=\"Title\" component={this.createInput} />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label>Lenguage</label>\r\n                    <Field name=\"Language\" component={this.createSelect} />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Passing grade</label>\r\n                    <Field name=\"PassingGrade\" type=\"number\" component={this.createInput} />\r\n                </div>\r\n\r\n                <div className=\"field\">\r\n                    <label>Content</label>\r\n                    <Field name=\"Content\" component={this.createTextArea} />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Email</label>\r\n                    <Field name=\"email\" type=\"email\" component={this.createInput} />\r\n                </div>\r\n                <div className=\"two fields\">\r\n                    <div className=\"field\">\r\n                        <label>Success Message</label>\r\n                        <Field name=\"SuccessMes\" type=\"text\" component={this.createInput} />\r\n                    </div>\r\n\r\n                    <div className=\"field\">\r\n                        <label>Failure Message</label>\r\n                        <Field name=\"FailureMes\" type=\"text\" component={this.createInput} />\r\n                    </div>\r\n                </div>\r\n                    <div className=\"field\">\r\n                        <label>\"Show answers on submit\"</label>\r\n                        <Field name=\"ShowAnswers\" type=\"checkbox\" component={this.createInput}/>\r\n                    </div>\r\n\r\n\r\n                <input type=\"submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default reduxForm({ form: 'TestCreate' })(FormInputs)\r\n","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js",["131"],"export default {\r\n    serverUrl: \"http://localhost:4000\",\r\n  };\r\n  ","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["132"],"import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport AnswerInput from './multiAnswerInput';\r\n\r\nclass MultipleChoiceQuestion extends Component {\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state = { Index: 13 }\r\n   }\r\n   \r\n   addAnswerInput = (e) =>{\r\n      if(this.state.Index <= 16){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = false;\r\n         this.props.updateInputsNum(this.state.Index);\r\n         if(this.state.Index < 16){\r\n            this.setState({ Index: this.state.Index + 1 });\r\n         }\r\n         else{\r\n            alert(\"Reached the maximum limit of answers you can add\");\r\n         }\r\n      }     \r\n   }\r\n\r\n   removeAnswerInput = (e) =>{\r\n      if(this.state.Index >= 13){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = true;\r\n         this.props.updateInputsNum(this.state.Index - 1);\r\n         if(this.state.Index > 13){           \r\n            this.setState({ Index: this.state.Index - 1 });\r\n         }\r\n         else{\r\n            alert(\"You can not remove any more answers\");\r\n         }\r\n      }\r\n   }\r\n\r\n   render(){\r\n      return ( \r\n         <div>\r\n            <div Id=\"9\">\r\n               <AnswerInput Id=\"1\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"10\">\r\n               <AnswerInput Id=\"2\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"11\">\r\n               <AnswerInput Id=\"3\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"12\">\r\n               <AnswerInput Id=\"4\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"13\" hidden = {true}>\r\n               <AnswerInput Id=\"5\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"14\" hidden = {true}>\r\n               <AnswerInput Id=\"6\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"15\" hidden = {true}>\r\n               <AnswerInput Id=\"7\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"16\" hidden = {true}>\r\n               <AnswerInput Id=\"8\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>          \r\n            <div>\r\n               <button className=\"btn btn-primary btn-sm\">Add Question</button>\r\n            </div>\r\n            <input type=\"button\" value = \"Add Answer\" onClick ={this.addAnswerInput}/>\r\n            <input type=\"button\" value = \"Remove Answer\" onClick ={this.removeAnswerInput}/>\r\n         </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default MultipleChoiceQuestion;","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx",["133","134","135"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":24},{"ruleId":"140","severity":1,"message":"144","line":1,"column":25,"nodeType":"142","messageId":"143","endLine":1,"endColumn":34},{"ruleId":"140","severity":1,"message":"145","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":24},{"ruleId":"146","severity":1,"message":"147","line":13,"column":23,"nodeType":"148","messageId":"149","endLine":13,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":76,"column":48,"nodeType":"152","messageId":"153","endLine":76,"endColumn":50},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"154","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":22},{"ruleId":"140","severity":1,"message":"155","line":1,"column":8,"nodeType":"142","messageId":"143","endLine":1,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":13,"column":5,"nodeType":"158","messageId":"159","endLine":15,"endColumn":6},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","endLine":3,"endColumn":5},{"ruleId":"140","severity":1,"message":"163","line":1,"column":10,"nodeType":"142","messageId":"143","endLine":1,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":12,"column":37,"nodeType":"152","messageId":"153","endLine":12,"endColumn":39},{"ruleId":"164","severity":1,"message":"165","line":14,"column":17,"nodeType":"166","messageId":"167","endLine":29,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":34,"column":8,"nodeType":"170","endLine":34,"endColumn":10,"suggestions":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'QuestionsService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'QuestionsTable' is defined but never used.","'React' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.tests'. Either include it or remove the dependency array.","ArrayExpression",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},"Update the dependencies array to be: [props.tests]",{"range":"177","text":"178"},[1017,1019],"[props.tests]"]
=======
[{"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js":"1","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js":"2","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js":"4","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js":"5","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js":"6","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts":"7","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js":"8","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js":"9","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx":"10","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx":"11","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js":"12","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts":"13","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\data\\questions.data.js":"14","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx":"15","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js":"16","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx":"17","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx":"18","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx":"19","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"20","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js":"21","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"22","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"23","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx":"24","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx":"25"},{"size":835,"mtime":1611509840071,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1610977084607,"results":"28","hashOfConfig":"27"},{"size":881,"mtime":1611510425272,"results":"29","hashOfConfig":"27"},{"size":334,"mtime":1611509840073,"results":"30","hashOfConfig":"27"},{"size":5588,"mtime":1611584284880,"results":"31","hashOfConfig":"27"},{"size":133,"mtime":1611509840063,"results":"32","hashOfConfig":"27"},{"size":452,"mtime":1611509840077,"results":"33","hashOfConfig":"27"},{"size":384,"mtime":1611509840075,"results":"34","hashOfConfig":"27"},{"size":221,"mtime":1611509840074,"results":"35","hashOfConfig":"27"},{"size":8606,"mtime":1611584186565,"results":"36","hashOfConfig":"27"},{"size":1194,"mtime":1611506716630,"results":"37","hashOfConfig":"27"},{"size":612,"mtime":1610991156295,"results":"38","hashOfConfig":"27"},{"size":456,"mtime":1611509840077,"results":"39","hashOfConfig":"27"},{"size":266,"mtime":1611509840070,"results":"40","hashOfConfig":"27"},{"size":2818,"mtime":1611584284878,"results":"41","hashOfConfig":"27"},{"size":67,"mtime":1610977084591,"results":"42","hashOfConfig":"27"},{"size":424,"mtime":1611063050703,"results":"43","hashOfConfig":"27"},{"size":936,"mtime":1611579148011,"results":"44","hashOfConfig":"27"},{"size":1163,"mtime":1611484286020,"results":"45","hashOfConfig":"27"},{"size":3368,"mtime":1611583287981,"results":"46","hashOfConfig":"27"},{"size":129,"mtime":1611509840058,"results":"47","hashOfConfig":"27"},{"size":547,"mtime":1611584216387,"results":"48","hashOfConfig":"27"},{"size":548,"mtime":1611584216955,"results":"49","hashOfConfig":"27"},{"size":701,"mtime":1611584284877,"results":"50","hashOfConfig":"27"},{"size":955,"mtime":1611584284875,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1ge9uil",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js",[],["109","110"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx",["111","112","113","114"],"import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport TestForm from '../test-form/TestForm';\r\nimport Questions from '../questionsComponents/questions'\r\nimport QuestionsService from '../../services/questionsService';\r\nimport QuestionsForm from '../questionsComponents/questionsForm';\r\nimport Route from '../routeComponent/Route';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <nav>\r\n        <ul>\r\n          <li><a href=\"/testcreate\">Test Form</a></li>\r\n          <li><a href=\"/questioncreate\">Question Form</a></li>\r\n        </ul>\r\n      </nav>\r\n      </header>\r\n      <div>\r\n        <Route path=\"/testcreate\">\r\n        <TestForm/>\r\n        </Route>\r\n        <Route path=\"/questioncreate\">\r\n          <Questions/>\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js",["115","116"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\routeComponent\\Route.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts",[],["117","118"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reducers\\questionReducer.js",["119"],"import QuestionService from '../services/questionsService';\r\nimport data from '../data/questions.data'\r\n\r\nconst questionReducer = ()=>{\r\n return QuestionService.getAllQuestions();\r\n}\r\n\r\n\r\n\r\nexport default questionReducer;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx",["120"],"import React, { Component } from \"react\";\r\nimport QuestionService from \"../../services/questionsService\"\r\nimport QuestionsForm from \"./questionsForm\";\r\nimport QuestionsTable from \"./questionsTable\";\r\n\r\nclass Questions extends Component {\r\n  state = {\r\n    questions: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  async getQuestions() {\r\n    const { data: questions } = await QuestionService.getAllQuestions();\r\n    this.setState({ questions });\r\n    console.log(this.state.questions)\r\n  }\r\n\r\n  addQuestion = async (question) => {\r\n    const addedQuestion = await QuestionService.addQuestion(question);\r\n    this.setState({ questions: [...this.state.questions, addedQuestion.data] });\r\n  };\r\n\r\n  showQuestion = (question) =>{\r\n    console.log(question);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container questions\">\r\n        {/* <div>\r\n          <QuestionsTable questions= {this.state.questions}/>\r\n        </div> */}\r\n        <div>\r\n          <h1>Add a new question</h1>\r\n          <QuestionsForm onAddQuestion={this.addQuestion} showQuestion={this.showQuestion}/>\r\n        </div>  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\testsService.ts",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\data\\questions.data.js",["121"],"import React from 'react';\r\n\r\nconst data =(\r\n    {\"questions\":[\r\n        {\"Id\": 1,\r\n        \"Title\": \"first-question\"},\r\n        {\"Id\": 2,\r\n        \"Title\": \"second-question\"},\r\n        {\"Id\": 3,\r\n        \"Title\": \"third-question\"}\r\n    ]})\r\n\r\n\r\nexport default data;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\FormInputs.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js",["122"],"export default {\r\n    serverUrl: \"http://localhost:4000\",\r\n  };\r\n  ","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["123"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\actions\\index.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\popup-component\\Popup.jsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":16,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":1,"column":25,"nodeType":"130","messageId":"131","endLine":1,"endColumn":34},{"ruleId":"128","severity":1,"message":"133","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":24},{"ruleId":"128","severity":1,"message":"134","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":13,"column":23,"nodeType":"137","messageId":"138","endLine":13,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":65,"column":48,"nodeType":"141","messageId":"142","endLine":65,"endColumn":50},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"143","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":12},{"ruleId":"128","severity":1,"message":"144","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":22},{"ruleId":"128","severity":1,"message":"145","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},{"ruleId":"146","severity":1,"message":"147","line":1,"column":1,"nodeType":"148","endLine":3,"endColumn":5},{"ruleId":"128","severity":1,"message":"149","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":16},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'QuestionsService' is defined but never used.","'QuestionsForm' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'data' is defined but never used.","'QuestionsTable' is defined but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> 1c0180eb2560701a405359245e57c3a7118e69de
