[{"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js":"1","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js":"2","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js":"4","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js":"5","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js":"6","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js":"7","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js":"8","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Route.js":"9","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts":"10","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx":"11","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx":"12","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts":"13","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js":"14","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx":"15","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx":"16","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx":"17","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js":"18","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js":"19","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-edit\\TestEdit.jsx":"20","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx":"21","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx":"22","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"23","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx":"24","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx":"25","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx":"26","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx":"27","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Routes.js":"28","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\History\\history.js":"29","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\homeComponents\\home.jsx":"30"},{"size":1013,"mtime":1611840668933,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"32"},{"size":1150,"mtime":1611840669424,"results":"34","hashOfConfig":"32"},{"size":400,"mtime":1611654262336,"results":"35","hashOfConfig":"32"},{"size":155,"mtime":1611654613954,"results":"36","hashOfConfig":"32"},{"size":493,"mtime":1611700574188,"results":"37","hashOfConfig":"32"},{"size":180,"mtime":1611654224920,"results":"38","hashOfConfig":"32"},{"size":6071,"mtime":1611756696770,"results":"39","hashOfConfig":"32"},{"size":204,"mtime":1611830322590,"results":"40","hashOfConfig":"32"},{"size":571,"mtime":1611699567827,"results":"41","hashOfConfig":"32"},{"size":2264,"mtime":1611831830955,"results":"42","hashOfConfig":"32"},{"size":566,"mtime":1611840668876,"results":"43","hashOfConfig":"32"},{"size":475,"mtime":1611697773926,"results":"44","hashOfConfig":"32"},{"size":612,"mtime":1611490312094,"results":"45","hashOfConfig":"32"},{"size":1137,"mtime":1611840668832,"results":"46","hashOfConfig":"32"},{"size":3760,"mtime":1611825473698,"results":"47","hashOfConfig":"32"},{"size":763,"mtime":1611592240176,"results":"48","hashOfConfig":"32"},{"size":258,"mtime":1611700546151,"results":"49","hashOfConfig":"32"},{"size":67,"mtime":1611173601459,"results":"50","hashOfConfig":"32"},{"size":7745,"mtime":1611833536809,"results":"51","hashOfConfig":"32"},{"size":9355,"mtime":1611840668913,"results":"52","hashOfConfig":"32"},{"size":4669,"mtime":1611840668915,"results":"53","hashOfConfig":"32"},{"size":3368,"mtime":1611661903910,"results":"54","hashOfConfig":"32"},{"size":936,"mtime":1611661903893,"results":"55","hashOfConfig":"32"},{"size":424,"mtime":1611173601424,"results":"56","hashOfConfig":"32"},{"size":548,"mtime":1611661903908,"results":"57","hashOfConfig":"32"},{"size":547,"mtime":1611661903864,"results":"58","hashOfConfig":"32"},{"size":1074,"mtime":1611840668932,"results":"59","hashOfConfig":"32"},{"size":86,"mtime":1611840668752,"results":"60","hashOfConfig":"32"},{"size":529,"mtime":1611840668831,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"a0uvo0",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\index.js",["130"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reportWebVitals.js",[],["131","132"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\app-component\\App.jsx",["133","134","135"],"import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport TestForm from '../test-form/TestForm';\r\nimport Questions from '../questionsComponents/questions'\r\nimport QuestionsService from '../../services/questionsService';\r\nimport TestList from '../tests-list-componenet/TestList';\r\nimport Route from '../routeComponent/Route';\r\nimport TestEdit from '../test-edit/TestEdit';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <nav>\r\n        <ul>\r\n          <li><a href=\"/testcreate\">Test Form</a></li>\r\n          <li><a href=\"/questions\">Questions</a></li>\r\n          <li><a href=\"/testlist\">Test List</a></li>\r\n        </ul>\r\n      </nav>\r\n      </header>\r\n      <div>\r\n        <Route path=\"/testcreate\">\r\n        <TestForm/>\r\n        </Route>\r\n        <Route path=\"/questions\">\r\n          <Questions/>\r\n        </Route>\r\n        <Route path=\"/testlist\">\r\n          <TestList/>\r\n        </Route>\r\n        <Route path=\"/testedit\">\r\n          <TestEdit/>\r\n        </Route>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\testReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionsSelectReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\reducers\\questionReducer.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\TestForm.js",["136","137"],"import React from 'react';\r\nimport './TestForm.css';\r\nimport { connect } from 'react-redux';\r\nimport { selectQuestions } from '../../actions'\r\nimport FormInputs from './FormInputs';\r\nimport TestsSerevice from '../../services/testsService'\r\nimport QuestionBox from '../question-box-component/QuestionBox';\r\nimport Popup from '../popup-component/Popup'\r\n\r\n\r\nfunction ColorRow(e) {\r\n    let TR = e.target;\r\n    while (TR.tagName != \"TR\") {\r\n        TR = TR.parentNode;\r\n    }\r\n    if (TR.classList.contains(\"green\")) {\r\n        TR.classList.remove(\"green\");\r\n        /*console.log(\"disable\")*/\r\n    }\r\n    else {\r\n        TR.classList.add(\"green\");\r\n        /*console.log(\"enable\")*/\r\n    }\r\n}\r\n\r\n\r\nclass TestForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = { dataTable: [], filterTag: \"\", questions: [], showPopup:{show:false, content:null} };\r\n        this.initQuestions();\r\n\r\n    }\r\n\r\n    initQuestions = () => {\r\n        this.props.questions.then(res => {\r\n            this.setState({ questions: res.data });\r\n        })\r\n    }\r\n\r\n    togglePopup=(question)=> {\r\n        this.setState({\r\n            showPopup:{show: !this.state.showPopup.show, content:question}\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({ dataTable: this.renderQuestions() });\r\n    }\r\n\r\n    onSubmit = (test) => {\r\n        test = { ...test, questions: this.props.selectedQuestions.map(q => q.Id) };\r\n        alert(\"Test successfully created\");\r\n        TestsSerevice.addTest(test);\r\n        console.log(test);\r\n        window.location.reload();\r\n    }\r\n    \r\n    checkTags=(tag)=>{\r\n            const filterTags = this.state.filterTag.split(\",\");\r\n            console.log(\"FilterTag:\",filterTags);\r\n            console.log(\"tag:\",tag);\r\n            console.log(\"flag\", filterTags.includes(tag));\r\n            if(filterTags.includes(tag))\r\n                return true;\r\n        return false\r\n    }\r\n\r\n    renderQuestions() {\r\n        let temp = [];\r\n        this.props.questions\r\n            .then(res => {\r\n                res.data.map((question, index) => {\r\n                    if (this.state.filterTag !== \"\") {\r\n                        question.Tags.forEach(t=>{\r\n                        if (this.checkTags(t)) {\r\n                            console.log(\"push\");\r\n                            temp.push(\r\n                                <tr key={question.Id} data-item={question}\r\n                                    onClick={(e) => {\r\n                                        ColorRow(e)\r\n                                        this.props.selectQuestions(question);\r\n                                    }}\r\n                                    className={(this.props.selectedQuestions.find(q => q.Id === question.Id)) ? \"green\" : \"\"}>\r\n                                    <td>{index}</td>\r\n                                    <td>{question.Id}</td>\r\n                                    <td><QuestionBox question={question} /></td>\r\n                                    <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n\r\n                                </tr>)\r\n                            this.setState({ dataTable: temp });\r\n                        }                        })\r\n                    }\r\n                    else {\r\n                        temp.push(<tr key={question.Id} data-item={question}\r\n                            onClick={(e) => {\r\n                                ColorRow(e)\r\n                                this.props.selectQuestions(question);\r\n                            }}\r\n                            className={(this.props.selectedQuestions.find(q => q.Id === question.Id)) ? \"green\" : \"\"}>\r\n                            <td>{index}</td>\r\n                            <td>{question.Id}</td>\r\n                            <td><QuestionBox question={question} /></td>\r\n                            <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n                        </tr>)\r\n                        this.setState({ dataTable: temp });\r\n\r\n                    }\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    updateFiletrState = () => {\r\n        this.setState({ filterTag: window.document.getElementById(\"filterInput\").value });\r\n    }\r\n    FilerQuestions = () => {\r\n        this.setState({ dataTable: this.renderQuestions() });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"TestForm\">\r\n                <FormInputs renderField={this.renderQuestions} onSubmit={this.onSubmit}></FormInputs>\r\n                <div>\r\n                    <input id=\"filterInput\" value={this.state.filterTag} onChange={this.updateFiletrState} />\r\n                    <button onClick={this.FilerQuestions}>Search</button>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"white\">Chose questions</label>\r\n                    <table className=\"ui celled table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>ID</th>\r\n                                <th>Content</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.dataTable}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>{this.state.showPopup.show ?\r\n                    <Popup\r\n                        content = {this.state.showPopup.content}\r\n                        text='Close Me'\r\n                        closePopup={()=>this.togglePopup(null)}\r\n                    />\r\n                    : null\r\n                }</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        questions: state.questions,\r\n        selectedQuestions: state.questionsSelect\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectQuestions })(TestForm);\r\n","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Route.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\questionsService.ts",[],["138","139"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\tests-list-componenet\\TestList.jsx",["140","141","142","143","144"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questions.jsx",["145","146"],"import React, { Component } from \"react\";\r\nimport QuestionService from \"../../services/questionsService\"\r\nimport QuestionsForm from \"./questionsForm\";\r\nimport QuestionsTable from \"./questionsTable\";\r\nimport Route from '../routeComponent/Route';\r\n\r\nclass Questions extends Component {\r\n  state = {\r\n    questions: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  async getQuestions() {\r\n    const { data: questions } = await QuestionService.getAllQuestions();\r\n    this.setState({ questions });\r\n    console.log(this.state.questions)\r\n  }\r\n\r\n  addQuestion = async (question) => {\r\n    const addedQuestion = await QuestionService.addQuestion(question);\r\n    this.setState({ questions: [...this.state.questions, addedQuestion.data] });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"container questions\">\r\n        <div>\r\n        <nav>\r\n        <ul>\r\n          <li><a href=\"/questions/questioncreate\">Add a Question</a></li>\r\n          <li><a href=\"/questions/allquestions\">All Questions</a></li>\r\n        </ul>\r\n      </nav>\r\n        </div>\r\n        {/* <Route path={`/questions/allquestions`}> */}\r\n        {/* <QuestionsTable/> */}\r\n        {/* </Route> */}\r\n        {/* <Route path={`/questions/questioncreate`}> */}\r\n          <QuestionsForm onAddQuestion = {this.addQuestion}/>\r\n        {/* </Route>   */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\testsService.ts",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\services\\httpService.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\popup-component\\Popup.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-form\\FormInputs.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\question-box-component\\QuestionBox.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\actions\\index.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\enviroments\\enviroment.js",["147"],"export default {\r\n    serverUrl: \"http://localhost:4000\",\r\n  };\r\n  ","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\test-edit\\TestEdit.jsx",["148","149","150","151","152"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionsTable.jsx",["153"],"import React,{ Component } from \"react\";\r\nimport QuestionBox from '../question-box-component/QuestionBox';\r\nimport Popup from '../popup-component/Popup';\r\nimport { connect } from 'react-redux';\r\nimport { selectQuestions } from '../../actions';\r\n\r\n\r\nclass QuestionsTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { questions: [], dataTable: [], filterTag: \"\", showPopup:{show:false, content:null} }\r\n        this.initQuestions();\r\n    }\r\n\r\n    initQuestions = () => {\r\n      this.props.questions.then(res => {\r\n          this.setState({ questions: res.data });\r\n      })\r\n  }\r\n\r\n    componentDidMount() {\r\n      this.setState({ dataTable: this.renderQuestions() });\r\n  }\r\n  renderQuestions() {\r\n    let temp = [];\r\n    this.props.questions\r\n        .then(res => {\r\n            res.data.map((question, index) => {\r\n              if (this.state.filterTag !== \"\") {\r\n                question.Tags.forEach(t=>{\r\n                if (this.checkTags(t)) {\r\n                    console.log(\"push\");\r\n                    temp.push(\r\n                        <tr key={question.Id} data-item={question}>\r\n                            <td>{index}</td>\r\n                            <td>{question.Id}</td>\r\n                            <td><QuestionBox question={question} /></td>\r\n                            <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n                        </tr>)\r\n                    this.setState({ dataTable: temp });\r\n                }                        \r\n              })\r\n            }\r\n            else {\r\n                temp.push(<tr key={question.Id} data-item={question}>\r\n                    <td>{index}</td>\r\n                    <td>{question.Id}</td>\r\n                    <td><QuestionBox question={question} /></td>\r\n                    <td> <button className=\"ui button\" onClick={()=>this.togglePopup(question)}>Show</button></td>\r\n                </tr>)\r\n                this.setState({ dataTable: temp });\r\n            }\r\n          })\r\n        })\r\n      }\r\n\r\n      updateFiletrState = () => {\r\n        this.setState({ filterTag: window.document.getElementById(\"filterInput\").value });\r\n      }\r\n\r\n      FilerQuestions = () => {\r\n          this.setState({ dataTable: this.renderQuestions() });\r\n      }\r\n\r\n      checkTags=(tag)=>{\r\n        const filterTags = this.state.filterTag.split(\",\");\r\n        console.log(\"FilterTag:\",filterTags);\r\n        console.log(\"tag:\",tag);\r\n        console.log(\"flag\", filterTags.includes(tag));\r\n        if(filterTags.includes(tag))\r\n            return true;\r\n        return false\r\n      }\r\n\r\ntogglePopup=(question)=> {\r\n  this.setState({\r\n      showPopup:{show: !this.state.showPopup.show, content:question}\r\n  });\r\n}\r\n    render() { \r\n        return ( \r\n            <div>\r\n              <div>\r\n                    <input id=\"filterInput\" value={this.state.filterTag} onChange={this.updateFiletrState} />\r\n                    <button onClick={this.FilerQuestions}>Search</button>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label className=\"white\">All Questions</label>\r\n                    <table className=\"ui celled table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>ID</th>\r\n                                <th>Content</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.dataTable}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div>{this.state.showPopup.show ?\r\n                    <Popup\r\n                        content = {this.state.showPopup.content}\r\n                        text='Close Me'\r\n                        closePopup={()=>this.togglePopup(null)}\r\n                    />\r\n                    : null\r\n                }</div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n      questions: state.questions,\r\n      selectedQuestions: state.questionsSelect\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { selectQuestions })(QuestionsTable);\r\n  ","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",["154"],"import { render } from '@testing-library/react';\r\nimport React, { Component } from 'react';\r\nimport AnswerInput from './multiAnswerInput';\r\n\r\nclass MultipleChoiceQuestion extends Component {\r\n\r\n   constructor(props){\r\n      super(props);\r\n      this.state = { Index: 13 }\r\n   }\r\n   \r\n   addAnswerInput = (e) =>{\r\n      if(this.state.Index <= 16){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = false;\r\n         this.props.updateInputsNum(this.state.Index - 8);\r\n         if(this.state.Index < 16){\r\n            this.setState({ Index: this.state.Index + 1 });\r\n         }\r\n         else{\r\n            alert(\"Reached the maximum limit of answers you can add\");\r\n         }\r\n      }     \r\n   }\r\n\r\n   removeAnswerInput = (e) =>{\r\n      if(this.state.Index >= 13){\r\n         let input = document.getElementById(this.state.Index);\r\n         input.hidden = true;\r\n         this.props.updateInputsNum(this.state.Index - 9);\r\n         if(this.state.Index > 13){           \r\n            this.setState({ Index: this.state.Index - 1 });\r\n         }\r\n         else{\r\n            alert(\"You can not remove any more answers\");\r\n         }\r\n      }\r\n   }\r\n\r\n   render(){\r\n      return ( \r\n         <div>\r\n            <div>\r\n               <AnswerInput Id=\"1\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"2\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"3\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n               <AnswerInput Id=\"4\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"13\" hidden = {true}>\r\n               <AnswerInput Id=\"5\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"14\" hidden = {true}>\r\n               <AnswerInput Id=\"6\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"15\" hidden = {true}>\r\n               <AnswerInput Id=\"7\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>\r\n            <br/>\r\n            <div Id=\"16\" hidden = {true}>\r\n               <AnswerInput Id=\"8\" answerChanged={this.props.answerChanged} \r\n               correctAnswerChanged={this.props.correctAnswerChanged}/>\r\n            </div>          \r\n            <div>\r\n               <button className=\"btn btn-primary btn-sm\">Add Question</button>\r\n            </div>\r\n            <input type=\"button\" value = \"Add Answer\" onClick ={this.addAnswerInput}/>\r\n            <input type=\"button\" value = \"Remove Answer\" onClick ={this.removeAnswerInput}/>\r\n         </div>\r\n     );\r\n   }\r\n}\r\n\r\nexport default MultipleChoiceQuestion;","C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\multiAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\questionsComponents\\choiceAnswerInput.jsx",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\routeComponent\\Routes.js",["155"],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\History\\history.js",[],"C:\\Users\\hhhh5\\Course Projects\\C#\\React\\tests-project\\src\\components\\homeComponents\\home.jsx",[],{"ruleId":"156","severity":1,"message":"157","line":10,"column":8,"nodeType":"158","messageId":"159","endLine":10,"endColumn":14},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"164","line":1,"column":16,"nodeType":"158","messageId":"159","endLine":1,"endColumn":24},{"ruleId":"156","severity":1,"message":"165","line":1,"column":25,"nodeType":"158","messageId":"159","endLine":1,"endColumn":34},{"ruleId":"156","severity":1,"message":"166","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":24},{"ruleId":"167","severity":1,"message":"168","line":13,"column":23,"nodeType":"169","messageId":"170","endLine":13,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":75,"column":48,"nodeType":"173","messageId":"174","endLine":75,"endColumn":50},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"156","severity":1,"message":"175","line":4,"column":9,"nodeType":"158","messageId":"159","endLine":4,"endColumn":13},{"ruleId":"156","severity":1,"message":"176","line":10,"column":11,"nodeType":"158","messageId":"159","endLine":10,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":24,"column":37,"nodeType":"173","messageId":"174","endLine":24,"endColumn":39},{"ruleId":"177","severity":1,"message":"178","line":25,"column":17,"nodeType":"179","messageId":"180","endLine":41,"endColumn":18},{"ruleId":"181","severity":1,"message":"182","line":45,"column":8,"nodeType":"183","endLine":45,"endColumn":10,"suggestions":"184"},{"ruleId":"156","severity":1,"message":"185","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":22},{"ruleId":"156","severity":1,"message":"186","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":1,"column":1,"nodeType":"189","endLine":3,"endColumn":5},{"ruleId":"156","severity":1,"message":"190","line":4,"column":27,"nodeType":"158","messageId":"159","endLine":4,"endColumn":47},{"ruleId":"156","severity":1,"message":"191","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":21},{"ruleId":"156","severity":1,"message":"192","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":16,"column":23,"nodeType":"169","messageId":"170","endLine":16,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":112,"column":48,"nodeType":"173","messageId":"174","endLine":112,"endColumn":50},{"ruleId":"171","severity":1,"message":"172","line":28,"column":44,"nodeType":"173","messageId":"174","endLine":28,"endColumn":46},{"ruleId":"156","severity":1,"message":"193","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":16},{"ruleId":"156","severity":1,"message":"194","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":16},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["195"],"no-negated-in-lhs",["196"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'QuestionsService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'setTestData' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["197"],"'QuestionsTable' is defined but never used.","'Route' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'clearselectQuestions' is defined but never used.","'TestsSerevice' is defined but never used.","'QuestionService' is defined but never used.","'render' is defined but never used.","'TestList' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},"Update the dependencies array to be: [props]",{"range":"200","text":"201"},[1365,1367],"[props]"]