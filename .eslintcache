[{"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js":"1","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js":"2","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx":"3","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js":"4","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts":"5","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js":"6","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js":"7","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx":"8","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx":"9","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx":"10","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx":"11","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx":"12","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx":"13"},{"size":542,"mtime":1610977084591,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1610977084607,"results":"16","hashOfConfig":"15"},{"size":685,"mtime":1610994643851,"results":"17","hashOfConfig":"15"},{"size":2513,"mtime":1610977084591,"results":"18","hashOfConfig":"15"},{"size":444,"mtime":1611050322591,"results":"19","hashOfConfig":"15"},{"size":612,"mtime":1610991156295,"results":"20","hashOfConfig":"15"},{"size":67,"mtime":1610977084591,"results":"21","hashOfConfig":"15"},{"size":3500,"mtime":1611142020950,"results":"22","hashOfConfig":"15"},{"size":424,"mtime":1611063050703,"results":"23","hashOfConfig":"15"},{"size":1488,"mtime":1611142020294,"results":"24","hashOfConfig":"15"},{"size":206,"mtime":1611061889142,"results":"25","hashOfConfig":"15"},{"size":1042,"mtime":1611073843088,"results":"26","hashOfConfig":"15"},{"size":1129,"mtime":1611051924716,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ge9uil",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\index.js",[],["62","63"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\reportWebVitals.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\app-component\\App.jsx",["64","65","66","67"],"import React, {useState,useEffect} from 'react';\r\nimport './App.css';\r\nimport TestForm from '../test-form/TestForm';\r\nimport Questions from '../questionsComponents/questions'\r\nimport QuestionsService from '../../services/questionsService';\r\nimport QuestionsForm from '../questionsComponents/questionsForm';\r\n\r\n\r\nfunction App() {\r\n  const [questions, setQuestions] = useState([])\r\n  useEffect(async () => await QuestionsService.getAllQuestions().then((response)=>setQuestions(response.data)),[]);\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n      <div>\r\n        <Questions/>\r\n      </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\test-form\\TestForm.js",["68","69"],"import React from 'react';\r\nimport './TestForm.css';\r\n\r\nfunction ColorRow(e){\r\n    if(e.target.parentNode.tagName == \"TR\")\r\n    {\r\n        console.log(e.target.parentNode.classList.contains(\"green\"))\r\n        if(e.target.parentNode.classList.contains(\"green\")){\r\n            e.target.parentNode.classList.remove(\"green\");\r\n            /*console.log(\"disable\")*/\r\n        }\r\n        else{\r\n            e.target.parentNode.classList.add(\"green\");\r\n            /*console.log(\"enable\")*/\r\n        }\r\n    }\r\n}\r\n\r\nfunction TestForm(props) {\r\n   const questions=props.questions;\r\n   const dataTable = [];\r\n   questions.map((question,index) => {\r\n    dataTable.push(<tr key={question.Id} data-item={question} onClick={ColorRow} >\r\n        <td>{index}</td>\r\n        <td>{question.Id}</td>\r\n        <td>{question.Title}</td>\r\n    </tr>)\r\n})\r\n    console.log(props);\r\n    console.log(questions);\r\n    return (\r\n        <div className=\"TestForm\">\r\n\r\n            <form className=\"ui form\">\r\n                <div className=\"filed\">\r\n                    <label>Test Title</label>\r\n                    <input type=\"text\" placeholder=\"Title\"></input>\r\n                </div>\r\n\r\n                <div className=\"filed\">\r\n                    <label>Language</label>\r\n                    <select>\r\n                        <option value=\"\">Lenguge</option>\r\n                        <option value=\"0\">Hebrew</option>\r\n                        <option value=\"1\">English</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"filed\">\r\n                    <label>Passing grade</label>\r\n                    <input type=\"number\" />\r\n                </div>\r\n\r\n                <div className=\"filed\">\r\n                    <label>Content</label>\r\n                    <textarea></textarea>\r\n                </div>\r\n\r\n                <div className=\"filed\">\r\n                    <label>Chose questions</label>\r\n                    <table className=\"ui celled table\">\r\n                        <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>ID</th>\r\n                                    <th>Content</th>\r\n                                </tr>\r\n                            </thead>\r\n                        <tbody>\r\n                            {dataTable}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestForm\r\n","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\questionsService.ts",[],["70","71"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\services\\httpService.js",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\enviroments\\enviroment.js",["72"],"export default {\r\n    serverUrl: \"http://localhost:4000\",\r\n  };\r\n  ","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsForm.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionTypes.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\choiceQuestion.jsx",[],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\multipleChoiceQuestion.jsx",[],["73","74"],"C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questions.jsx",["75"],"import React, { Component } from \"react\";\r\nimport QuestionService from \"../../services/questionsService\"\r\nimport QuestionsForm from \"./questionsForm\";\r\n// import QuestionsTable from \"./questionsTable\";\r\nimport QuestionTypes from \"./questionTypes\"\r\n\r\nclass Questions extends Component {\r\n  state = {\r\n    questions: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.getQuestions();\r\n  }\r\n\r\n  async getQuestions() {\r\n    const { data: questions } = await QuestionService.getAllQuestions();\r\n    this.setState({ questions });\r\n    console.log(this.state.questions)\r\n  }\r\n\r\n  addQuestion = async (question) => {\r\n    const addedQuestion = await QuestionService.addQuestion(question);\r\n    this.setState({ questions: [...this.state.questions, addedQuestion.data] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container questions\">\r\n        <div>\r\n          <h1>Add a new question</h1>\r\n          <QuestionsForm onAddQuestion={this.addQuestion} />\r\n        </div>      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Questions;","C:\\Users\\almog\\Desktop\\WebTestsProject\\TestWeb-Proj\\src\\components\\questionsComponents\\questionsTable.jsx",[],["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":10,"column":10,"nodeType":"84","messageId":"85","endLine":10,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":11,"column":13,"nodeType":"90","endLine":11,"endColumn":111},{"ruleId":"91","severity":1,"message":"92","line":5,"column":36,"nodeType":"93","messageId":"94","endLine":5,"endColumn":38},{"ruleId":"95","severity":1,"message":"96","line":22,"column":35,"nodeType":"90","messageId":"97","endLine":22,"endColumn":37},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","endLine":3,"endColumn":5},{"ruleId":"78","replacedBy":"101"},{"ruleId":"80","replacedBy":"102"},{"ruleId":"82","severity":1,"message":"103","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":21},{"ruleId":"78","replacedBy":"104"},{"ruleId":"80","replacedBy":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'TestForm' is defined but never used.","Identifier","unusedVar","'QuestionsForm' is defined but never used.","'questions' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["106"],["107"],"'QuestionTypes' is defined but never used.",["106"],["107"],"no-global-assign","no-unsafe-negation"]